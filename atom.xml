<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Warn&amp;Christina的博客</title>
  <icon>https://www.gravatar.com/avatar/597d8656b53fbc8b405cee571e45b3fa</icon>
  <subtitle>九流杂耍，蹒跚学步</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wangen.github.io/"/>
  <updated>2018-01-21T09:21:55.000Z</updated>
  <id>https://wangen.github.io/</id>
  
  <author>
    <name>Warn</name>
    <email>imwarn@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>jQuery不同版本库同时引入冲突解决办法</title>
    <link href="https://wangen.github.io/2018/01/21/jQuery-clash-1/"/>
    <id>https://wangen.github.io/2018/01/21/jQuery-clash-1/</id>
    <published>2018-01-21T09:08:15.000Z</published>
    <updated>2018-01-21T09:21:55.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>jQuery多个版本或和其他js库冲突主要是常用的$符号的冲突。</p></blockquote><h2 id="一、常规解决办法"><a href="#一、常规解决办法" class="headerlink" title="一、常规解决办法"></a>一、常规解决办法</h2><p>在同一页面中引入了多个版本的jQuery，导致js失效，可以去掉其中一个版本的jQuery，但是最好保证jQuery的引入在其他js之前。优先尝试保留新版本jQuery，注释掉旧版本的；如若不行，尝试保留旧版本的jQuery。<br>但是有一些特殊情况：我们引入的js插件，有的依赖于新版本jQuery的特性，有的依赖于旧版本jQuery的特性，比如说，你的业务代码采用了最新版的jQuery库，而你选用的第三方插件依赖的更早版本的jQuery库（大多数原因是js插件未持续更新）；又比如说，你正维护着一个系统，它已有的业务代码由于各种原因，引用了较老版本的jQuery库，你新开发的模块采用的是其他版本的jQuery库。这种情况又该如何处理？</p><p><center><br><img src="https://github.com/WangEn/BlogBackup/blob/master/blogimgs/jqueryClash101.jpg" alt="jQuery-clash-1"><br></center><br>最直白的办法，寻找其他可替换的js插件，只保留一个jQuery即可。但是有时候我们必须保留现有的js插件，也就是说两个版本的jQuery都必须保留，怎么办？请继续往下看：</p><h2 id="二、认识jQuery-noConflict"><a href="#二、认识jQuery-noConflict" class="headerlink" title="二、认识jQuery.noConflict()"></a>二、认识jQuery.noConflict()</h2><p>jQuery是目前使用最广泛的前端框架之一，有大量的第三方库和插件基于它开发。为了避免全局命名空间污染，jQuery提供了jQuery.noConflict()方法解决变量冲突。这个方法，毫无疑问，非常有效。遗憾的是，jQuery的官方文档对该方法的描述不够清晰，许多开发者并不清楚当他们调用jQuery.noConflict()时，究竟发生了什么，从而导致在使用时出现了许多问题。尽管如此，jQuery.noConflict()背后实现原理依然值得Web开发者学习掌握，成为解决类似全局命名空间污染问题的利器。</p><h3 id="1、jQuery-noConflict-的作用？"><a href="#1、jQuery-noConflict-的作用？" class="headerlink" title="1、jQuery.noConflict()的作用？"></a>1、jQuery.noConflict()的作用？</h3><p>jQuery.noConflict()的存在只有一个目的：它允许你在同一个页面加载多个jQuery实例，尤其是不同版本的jQuery。在多版本jQuery共存时，不得不面对jQuery对象/方法冲突的问题。幸运的是，jQuery.noConflict()帮你解决了这个烦恼。</p><h3 id="2、jQuery被加载时发生了什么？"><a href="#2、jQuery被加载时发生了什么？" class="headerlink" title="2、jQuery被加载时发生了什么？"></a>2、jQuery被加载时发生了什么？</h3><p>当jQuery被页面引用/加载时，它被封装在一个自执行函数（匿名函数）里，它提供的所有一切变量、函数、对象都在匿名函数内部的可执行环境内，外部环境无法调用,以防止全局命名空间污染。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>jQuery在匿名函数内部定义了两个全局对象:<code>jQuery</code>和<code>$</code>，把自己暴露给外部环境。开发者习惯使用的各种公共方法都是通过这两个对象进行访问的，如jQuery.ajax()/jQuery.css()等。在最初，它们指向匿名函数内部的同一个对象jQuery(私有变量)，通过它访问匿名函数内部的私有变量和函数。这使得匿名函数在自执行后其内部的私有变量和函数仍然进驻在内存里，不会被javascript的垃圾回收机制清除。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">window.jQuery = window.$ = jQuery;</span><br></pre></td></tr></table></figure></p><p>当jQuery被页面加载后，当前页面有可能已经存在了<code>jQuery</code>和<code>$</code>这两个全局变量（比如，加载了其它的第三方库，其内部也定义了它俩），这就会导致已经存在的对象被覆盖（全局命名空间污染）。为了解决这个问题，jQuery在内部先将已经存在的全局变量缓存起来，保存在私有变量_jQuery和_\$中，供后续调用。所以，如果页面在加载jQuery库时，还不存在<code>jQuery</code>和<code>$</code>对象，那么_jQuery和_\$都是undefined；否则，它们都会保存对已有<code>jQuery</code>和<code>$</code>的引用（也许来自之前引用的第三方库或是不同版本的jQuery库）。之后，jQuery会像上文说描述的那样，覆盖这两个全局变量并将自己暴露给外部环境。至此，页面上的全局变量<code>jQuery</code>和<code>$</code>已经指向刚刚引入的jQuery库。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// Map over jQuery <span class="keyword">in</span> <span class="keyword">case</span> of overwrite</span><br><span class="line">_jQuery = window.jQuery,</span><br><span class="line"></span><br><span class="line">// Map over the $ <span class="keyword">in</span> <span class="keyword">case</span> of overwrite</span><br><span class="line">_$ = window.$,</span><br><span class="line"></span><br><span class="line">// Otherwise expose jQuery to the global object as usual</span><br><span class="line">window.jQuery = window.$ = jQuery;</span><br></pre></td></tr></table></figure></p><h3 id="3、jQuery-noConflict-的神奇效果？"><a href="#3、jQuery-noConflict-的神奇效果？" class="headerlink" title="3、jQuery.noConflict()的神奇效果？"></a>3、jQuery.noConflict()的神奇效果？</h3><p>假设你维护的系统已经引用了1.7.0版本的jQuery库，而你在新添加的功能里引用了1.10.2版本的jQuery库。那么，还有办法重新使用jQuery 1.7.0 或是同时使用两个版本的jQuery库吗？答案是肯定，那就是jQuery.noConflict()。实际上，利用jQuery.noConflict()，你可以立刻把全局变量<code>jQuery</code>和<code>$</code>重新指向之前引用的对象。很神奇吧？这就是为什么jQuery在对外暴露自己前内部缓存了之前引用的对象。<br>jQuery.noConflict()接受一个可选的布尔值参数，通常默认值是false。这个参数会带来什么影响呢？其实，很简单。如果调用jQuery.noConflict()或是jQuery.noConflict(false)，只有全局变量<code>$</code>会被重置恢复成之前的引用值；如果调用jQuery.noConflict(true)，那么全局变量<code>jQuery</code>和<code>$</code>都会被重置恢复成之前的引用值。<strong>这一点非常重要，建议牢记</strong>。当你调用jQuery.noConflict(false/true)之后，它会返回当前jQuery的实例，利用这个特性我们可以实现jQuery的重命名。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// <span class="string">"Renaming"</span> jQuery</span><br><span class="line">var jayquery = jQuery.noConflict( <span class="literal">true</span> );</span><br><span class="line">// Now we can call things like jayquery.ajax(), jayquery.css(), and so on</span><br></pre></td></tr></table></figure></p><p>我们再来看一个代码片段，测试一下是否真正理解了神奇的noConflict()<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- jQuery and $ are undefined --&gt;</span><br><span class="line">&lt;script src=<span class="string">"//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;!-- jQuery and $ now point to jQuery 1.10.2 --&gt;</span><br><span class="line">&lt;script src=<span class="string">"//ajax.googleapis.com/ajax/libs/jquery/1.7.0/jquery.min.js"</span>&gt;</span><br><span class="line">&lt;!-- jQuery and $ now point to jQuery 1.7.0 --&gt;</span><br><span class="line">&lt;script&gt;jQuery.noConflict();&lt;/script&gt;</span><br><span class="line">&lt;!-- jQuery still points to jQuery 1.7.0; $ now points to jQuery 1.10.2 --&gt;</span><br><span class="line">&lt;script src=<span class="string">"//ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js"</span>&gt;</span><br><span class="line">&lt;!-- jQuery and $ now point to jQuery 1.6.4 --&gt;</span><br><span class="line">&lt;script&gt;var jquery164 = jQuery.noConflict( <span class="literal">true</span> );&lt;/script&gt;</span><br><span class="line">&lt;!-- jQuery now points to jQuery 1.7.0; $ now points to jQuery 1.10.2; jquery164 points to jQuery 1.6.4 --&gt;</span><br></pre></td></tr></table></figure></p><h3 id="4、避免第三方库的冲突"><a href="#4、避免第三方库的冲突" class="headerlink" title="4、避免第三方库的冲突"></a>4、避免第三方库的冲突</h3><p>以上的代码片段展示了如何解决多版本jQuery的冲突。接下来，我们尝试解决jQuery库和第三方库的冲突，下面出现的代码片段在jQuery的官方文档中都有，有兴趣的程序猿可以仔细阅读官方文档体会其中的区别。</p><h4 id="直接使用No-Conflict模式"><a href="#直接使用No-Conflict模式" class="headerlink" title="直接使用No-Conflict模式"></a>直接使用No-Conflict模式</h4><p>使用No-Conflict模式，其实就是对jQuery进行重命名，再调用。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 采用no-conflict模式，jquery.js在prototype.js之后被引入. --&gt;</span><br><span class="line">&lt;script src=<span class="string">"prototype.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">"jquery.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var <span class="variable">$j</span> = jQuery.noConflict();</span><br><span class="line">    // <span class="variable">$j</span> 引用了jQuery对象本身.</span><br><span class="line">    <span class="variable">$j</span>(document).ready(<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">        <span class="variable">$j</span>( <span class="string">"div"</span> ).hide();</span><br><span class="line">    &#125;);</span><br><span class="line">    // $ 被重新指向prototype.js里定义的对象</span><br><span class="line">    // document.getElementById(). mainDiv below is a DOM element, not a jQuery object.</span><br><span class="line">    window.onload = <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">        var mainDiv = $( <span class="string">"main"</span> );</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><h4 id="使用自执行函数封装"><a href="#使用自执行函数封装" class="headerlink" title="使用自执行函数封装"></a>使用自执行函数封装</h4><p>使用这种方式，你可以在匿名函数内部继续使用标准的<code>$</code>对象，这也是众多jQuery插件采用的方法。需要注意的是，使用这种方法，函数内部无法再使用prototype.js定义的<code>$</code>对象了。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- jquery.js在prototype.js之后被引入. --&gt;</span><br><span class="line">&lt;script src=<span class="string">"prototype.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">"jquery.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    jQuery.noConflict();</span><br><span class="line">    (<span class="keyword">function</span>( $ ) &#123;</span><br><span class="line">        // Your jQuery code here, using the $</span><br><span class="line">    &#125;)( jQuery );</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><h4 id="使用标准jQuery-document-ready-函数"><a href="#使用标准jQuery-document-ready-函数" class="headerlink" title="使用标准jQuery(document).ready()函数"></a>使用标准jQuery(document).ready()函数</h4><p>如果jQuery库在其它库之前引入，那么jQuery内部定义的<code>jQuery</code>和<code>$</code>会被第三方库覆盖，这时候再使用noConflict()已经没有什么意义了。解决的方法很简单，直接使用jQuery的标准调用方式。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- jquery.js在prototype.js之前被引入. --&gt;</span><br><span class="line">&lt;script src=<span class="string">"jquery.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">"prototype.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    // Use full jQuery <span class="keyword">function</span> name to reference jQuery.</span><br><span class="line">    jQuery( document ).ready(<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">        jQuery( <span class="string">"div"</span> ).hide();</span><br><span class="line">    &#125;);</span><br><span class="line">    // 或者</span><br><span class="line">    jQuery(<span class="keyword">function</span>($)&#123;</span><br><span class="line">        // Your jQuery code here, using the $</span><br><span class="line">    &#125;);</span><br><span class="line">    // Use the $ variable as defined <span class="keyword">in</span> prototype.js</span><br><span class="line">    window.onload = <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">        var mainDiv = $( <span class="string">"main"</span> );</span><br><span class="line">    &#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><h2 id="三、冲突的解决"><a href="#三、冲突的解决" class="headerlink" title="三、冲突的解决"></a>三、冲突的解决</h2><p>jQuery.noConflict()是解决jQuery冲突的主力军，通过不同情形下的调用来解决不同版本库共存的冲突。</p><h3 id="1、同一页面jQuery多个版本冲突解决方法"><a href="#1、同一页面jQuery多个版本冲突解决方法" class="headerlink" title="1、同一页面jQuery多个版本冲突解决方法"></a>1、同一页面jQuery多个版本冲突解决方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 引入1.6.4版的jq --&gt;</span><br><span class="line">&lt;script src=<span class="string">"http://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt; var jq164 = jQuery.noConflict(<span class="literal">true</span>); &lt;/script&gt;</span><br><span class="line">&lt;!-- 引入1.4.2版的jq --&gt;</span><br><span class="line">&lt;script src=<span class="string">"http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt; var jq142 = jQuery.noConflict(<span class="literal">true</span>); &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">(<span class="keyword">function</span>($)&#123;</span><br><span class="line">    //此时的$是jQuery-1.6.4</span><br><span class="line">    $(<span class="string">'#'</span>);</span><br><span class="line">&#125;)(jq164);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">jq142(<span class="keyword">function</span>($)&#123;</span><br><span class="line">    //此时的$是jQuery-1.4.2</span><br><span class="line">    $(<span class="string">'#'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h3 id="2、jQuery库在其他库之后导入"><a href="#2、jQuery库在其他库之后导入" class="headerlink" title="2、jQuery库在其他库之后导入"></a>2、jQuery库在其他库之后导入</h3><blockquote><p>jQuery noConflict() 方法会释放会 $ 标识符的控制，这样其他脚本就可以使用它了。</p></blockquote><h4 id="2-1-可以通过jQuery全名替代简写的方式来使用-jQuery"><a href="#2-1-可以通过jQuery全名替代简写的方式来使用-jQuery" class="headerlink" title="2-1 可以通过jQuery全名替代简写的方式来使用 jQuery"></a>2-1 可以通过jQuery全名替代简写的方式来使用 jQuery</h4><p>在其他库和jQuery库都加载完毕后，可以在任何时候调用jQuery.noConflict()函数来将变量$的控制权移交给其他JavaSript库。然后就可以在程序里将jQuery()函数作为jQuery对象的制造工厂。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"prototype.js"</span> <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">"jquery.js"</span> <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;p id=<span class="string">"pp"</span>&gt;<span class="built_in">test</span>---prototype&lt;/p&gt;</span><br><span class="line">&lt;p&gt;<span class="built_in">test</span>---jQuery&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">jQuery.noConflict();                </span><br><span class="line">//将变量$的控制权让渡给prototype.js，全名可以不调用。</span><br><span class="line">jQuery(<span class="function"><span class="title">function</span></span>()&#123;                    //使用jQuery</span><br><span class="line">    jQuery(<span class="string">"p"</span>).click(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">        alert( jQuery(this).text() );</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">//此处不可以再写成$,此时的$代表prototype.js中定义的$符号。</span><br><span class="line"></span><br><span class="line">$(<span class="string">"pp"</span>).style.display = <span class="string">'none'</span>;        //使用prototype</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="2-2-自定义一个快捷方式"><a href="#2-2-自定义一个快捷方式" class="headerlink" title="2-2 自定义一个快捷方式"></a>2-2 自定义一个快捷方式</h4><blockquote><p>noConflict() 可返回对 jQuery 的引用，可以把它存入自定义名称，例如jq,$J变量，以供稍后使用。</p></blockquote><p>这样可以确保jQuery不会与其他库冲突，同时又使用自定义一个快捷方式。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">var <span class="variable">$j</span> = jQuery.noConflict();        //自定义一个比较短快捷方式</span><br><span class="line"><span class="variable">$j</span>(<span class="function"><span class="title">function</span></span>()&#123;                        //使用jQuery</span><br><span class="line">    <span class="variable">$j</span>(<span class="string">"p"</span>).click(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">        alert( <span class="variable">$j</span>(this).text() );</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="string">"pp"</span>).style.display = <span class="string">'none'</span>;        //使用prototype</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="2-3-在不冲突的情况下仍然用"><a href="#2-3-在不冲突的情况下仍然用" class="headerlink" title="2-3 在不冲突的情况下仍然用$"></a>2-3 在不冲突的情况下仍然用$</h4><p>如果想在jQuery 代码块使用 \$ 简写，不愿意改变这个快捷方式，可以把 \$ 符号作为变量传递给 ready 方法。这样就可以在函数内使用 \$ 符号了 ， 而在函数外，依旧不得不使用 “jQuery”。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">jQuery.noConflict();     //将变量$的控制权让渡给prototype.js</span><br><span class="line">jQuery(document).ready(<span class="keyword">function</span>($)&#123;</span><br><span class="line">    $(<span class="string">"p"</span>).click(<span class="function"><span class="title">function</span></span>()&#123;        //继续使用 $ 方法</span><br><span class="line">        alert( $(this).text() );</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">//或者如下</span><br><span class="line">jQuery(<span class="keyword">function</span>($)&#123;                    //使用jQuery</span><br><span class="line">    $(<span class="string">"p"</span>).click(<span class="function"><span class="title">function</span></span>()&#123;        //继续使用 $ 方法</span><br><span class="line">        alert( $(this).text() );</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>或者使用IEF语句块，这应该是最理想的方式，因为可以通过改变最少的代码来实现全面的兼容性。</p><p>在我们自己写jquery插件时,应该都使用这种写法，因为我们不知道具体工作过程中是如何顺序引入各种js库的,而这种语句块的写法却能屏蔽冲突。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">jQuery.noConflict();                //将变量$的控制权让渡给prototype.js</span><br><span class="line">(<span class="keyword">function</span>($)&#123;                        //定义匿名函数并设置形参为$</span><br><span class="line">    $(<span class="function"><span class="title">function</span></span>()&#123;                    //匿名函数内部的$均为jQuery</span><br><span class="line">        $(<span class="string">"p"</span>).click(<span class="function"><span class="title">function</span></span>()&#123;    //继续使用 $ 方法</span><br><span class="line">            alert($(this).text());</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)(jQuery);                            //执行匿名函数且传递实参jQuery</span><br><span class="line"></span><br><span class="line">$(<span class="string">"pp"</span>).style.display = <span class="string">'none'</span>;        //使用prototype</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="3、jQuery库在其他库之前导入"><a href="#3、jQuery库在其他库之前导入" class="headerlink" title="3、jQuery库在其他库之前导入"></a>3、jQuery库在其他库之前导入</h3><blockquote><p>jQuery库在其他库之前导入，$的归属权默认归后面的JavaScript库所有。那么可以直接使用”jQuery”来做一些jQuery的工作。</p></blockquote><p>同时，可以使用$()方法作为其他库的快捷方式。这里无须调用jQuery.noConflict()函数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 引入 jQuery  --&gt;</span><br><span class="line">&lt;script src=<span class="string">"../../scripts/jquery.js"</span> <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;!-- 引入 prototype  --&gt;</span><br><span class="line">&lt;script src=<span class="string">"lib/prototype.js"</span> <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p id=<span class="string">"pp"</span>&gt;Test-prototype(将被隐藏)&lt;/p&gt;</span><br><span class="line">&lt;p &gt;Test-jQuery(将被绑定单击事件)&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">jQuery(<span class="function"><span class="title">function</span></span>()&#123;   //直接使用 jQuery ,没有必要调用<span class="string">"jQuery.noConflict()"</span>函数。</span><br><span class="line">    jQuery(<span class="string">"p"</span>).click(<span class="function"><span class="title">function</span></span>()&#123;      </span><br><span class="line">        alert( jQuery(this).text() );</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="string">"pp"</span>).style.display = <span class="string">'none'</span>; //使用prototype</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="四、原理"><a href="#四、原理" class="headerlink" title="四、原理"></a>四、原理</h2><h3 id="1、源码"><a href="#1、源码" class="headerlink" title="1、源码"></a>1、源码</h3><p>源码：看一下源码里怎么做到的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">var</span><br><span class="line">// Map over jQuery <span class="keyword">in</span> <span class="keyword">case</span> of overwrite</span><br><span class="line">_jQuery = window.jQuery,</span><br><span class="line"></span><br><span class="line">// Map over the $ <span class="keyword">in</span> <span class="keyword">case</span> of overwrite</span><br><span class="line">_$ = window.$,</span><br><span class="line"></span><br><span class="line">jQuery.extend(&#123;</span><br><span class="line">    noConflict: <span class="keyword">function</span>( deep ) &#123;</span><br><span class="line">            <span class="keyword">if</span> ( window.$ === jQuery ) &#123;</span><br><span class="line">                window.$ = _$;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ( deep &amp;&amp; window.jQuery === jQuery ) &#123;</span><br><span class="line">                window.jQuery = _jQuery;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">return</span> jQuery;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在jQuery加载的时候，通过事先声明的<em>jQuery变量获取到当前window.jQuery，通过\</em>$ 获取到当前<code>window.$</code>。</p><p>通过jQuery.extend()把noConflict挂载到jQuery下面。所以我们在调用的时候都是jQuery.noConflict()这样调。</p><p>在调用noConflict()时做了2个判断，</p><p>第一个if，把$的控制权交出去。</p><p>第二个if，在noConflict()传参的时候把，jQuery的控制权交出去。</p><p>最后noConflict()返回jQuery对象，用哪个参数接收，哪个参数将拥有jQuery的控制权。</p><h3 id="2、-验证"><a href="#2、-验证" class="headerlink" title="2、 验证"></a>2、 验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//冲突   </span><br><span class="line">var $ = 123;  //假设其他库中$为123</span><br><span class="line">$(</span><br><span class="line">    <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        console.log($); </span><br><span class="line">        <span class="comment"># //报错Uncaught TypeError: $ is not a function</span></span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>解决冲突<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#//解决冲突</span></span><br><span class="line">var jq = $.noConflict();</span><br><span class="line">var $ = 123;</span><br><span class="line">jq(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">    alert($); //123</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h4 id="释放-控制权例子"><a href="#释放-控制权例子" class="headerlink" title="释放\$控制权例子"></a>释放\$控制权例子</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var $ = 123; // window.$是123，存储在私有的_$上。</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://code.jquery.com/jquery-2.2.4.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;div&gt;aaa&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var jq = $.noConflict();</span><br><span class="line">    <span class="comment">#//当window.$===jQuery的时候，把_$赋给了window.$。</span></span><br><span class="line">    jq(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        alert($); //123</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">``` </span><br><span class="line"><span class="comment">#### 释放jQuery控制权例子</span></span><br><span class="line"></span><br><span class="line">参数deep的作用：deep用来放弃jQuery对外的接口。</span><br><span class="line">如下，noConflict()不写参数，弹出jQuery为构造函数。</span><br><span class="line"></span><br><span class="line">``` bash</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var $ = 123;</span><br><span class="line">    var jQuery=456;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://code.jquery.com/jquery-2.0.3.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;div&gt;aaa&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var jq = $.noConflict();</span><br><span class="line">    jq(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        alert(jQuery); //构造函数</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>如果写个参数true，会弹出456。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var $ = 123;</span><br><span class="line">    var jQuery=456;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://code.jquery.com/jquery-2.0.3.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;div&gt;aaa&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var jq = $.noConflict(<span class="literal">true</span>);</span><br><span class="line"><span class="comment">#//写了true或者参数的时候，deep为真window.jQuery===jQuery为真，所以进入if条件。把456赋值给window.jQuery</span></span><br><span class="line">    jq(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        alert(jQuery); //456</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>因知识本身在变化，作者也在不断学习成长，文章内容也不定时更新，为避免误导读者，留下参考教程，方便追根溯源。</p><blockquote><p>1、<a href="http://www.cnblogs.com/starof/p/6855186.html" target="_blank" rel="noopener">starof:jQuery库冲突解决办法</a><br>2、<a href="http://www.jb51.net/article/90293.htm" target="_blank" rel="noopener">jQuery多个版本和其他js库冲突的解决方法</a><br>3、<a href="https://www.cnblogs.com/laoyu/p/5189750.html" target="_blank" rel="noopener">老俞：三分钟玩转jQuery.noConflict()</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;jQuery多个版本或和其他js库冲突主要是常用的$符号的冲突。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;一、常规解决办法&quot;&gt;&lt;a href=&quot;#一、常规解决办法&quot; class=&quot;headerlink&quot; title=&quot;一、常规解决办法&quot;
      
    
    </summary>
    
      <category term="jQuery" scheme="https://wangen.github.io/categories/jQuery/"/>
    
    
      <category term="jQuery" scheme="https://wangen.github.io/tags/jQuery/"/>
    
      <category term="冲突" scheme="https://wangen.github.io/tags/%E5%86%B2%E7%AA%81/"/>
    
  </entry>
  
  <entry>
    <title>dedecms织梦特定条件下,隐藏特定栏目的方法,通过css实现</title>
    <link href="https://wangen.github.io/2018/01/20/dede-list-3/"/>
    <id>https://wangen.github.io/2018/01/20/dede-list-3/</id>
    <published>2018-01-20T13:54:52.000Z</published>
    <updated>2018-01-20T14:13:32.674Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、通过前台直接隐藏栏目"><a href="#一、通过前台直接隐藏栏目" class="headerlink" title="一、通过前台直接隐藏栏目"></a>一、通过前台直接隐藏栏目</h2><blockquote><p>如果栏目在后台设置显示或者设置隐藏无效,前台怎么隐藏?</p></blockquote><h3 id="CSS样式"><a href="#CSS样式" class="headerlink" title="CSS样式"></a>CSS样式</h3><p>定义用来隐藏栏目的CSS样式<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.hidden&#123;display:nidden&#125;</span><br></pre></td></tr></table></figure></p><h3 id="HTML调用代码"><a href="#HTML调用代码" class="headerlink" title="HTML调用代码"></a>HTML调用代码</h3><p>因为栏目id为6的栏目是【关于我们】等非核心栏目,不想在导航上显示,但在后台又没有设置隐藏,设置隐藏了前台的其它栏目页就没法调用他了。所以,在导航条上要处理一下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;dede:channel <span class="built_in">type</span>=<span class="string">'top'</span> row=<span class="string">'10'</span> currentstyle=<span class="string">"&lt;li class='active'&gt;&lt;a href='~typelink~' ~rel~&gt;~typename~&lt;/a&gt;&lt;/li&gt;"</span>&#125;</span><br><span class="line">    &lt;li  class=<span class="string">"[field:id runphp='yes'] if(@me=='6') @me = 'hidden'; else @me = '';[/field:id]"</span> &gt;</span><br><span class="line">        &lt;a href=<span class="string">'[field:typeurl/]'</span>&gt;[field:typename/]&lt;/a&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">&#123;/dede:channel&#125;</span><br></pre></td></tr></table></figure><h2 id="二、前台单独显示隐藏栏目"><a href="#二、前台单独显示隐藏栏目" class="headerlink" title="二、前台单独显示隐藏栏目"></a>二、前台单独显示隐藏栏目</h2><blockquote><p>如果ID为666的栏目在后台设置隐藏,而在前台想让他单独显示在导航条的右侧,怎么实现？代码如下所示：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># //调用首页</span></span><br><span class="line">&lt;li &#123;dede:field name=id runphp=<span class="string">'yes'</span>&#125;(@me==<span class="string">''</span>)?@me=<span class="string">"class='active'"</span>:@me=<span class="string">''</span>;&#123;/dede:field&#125; &gt;</span><br><span class="line">    &lt;a href=<span class="string">"&#123;dede:global.cfg_basehost/&#125;"</span>&gt;首页&lt;/a&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line"><span class="comment"># //调用所有显示的栏目</span></span><br><span class="line">&#123;dede:channel <span class="built_in">type</span>=<span class="string">'top'</span> row=<span class="string">'10'</span> currentstyle=<span class="string">"&lt;li class='active'&gt;&lt;a href='~typelink~' ~rel~&gt;&lt;span&gt;~typename~&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;"</span>&#125;</span><br><span class="line">&lt;li&gt;</span><br><span class="line">    &lt;a href=<span class="string">'[field:typeurl/]'</span> [field:rel/]&gt;&lt;span&gt;[field:typename/]&lt;/span&gt;&lt;/a&gt;</span><br><span class="line">&lt;/li&gt;</span><br><span class="line">&#123;/dede:channel&#125;</span><br><span class="line"><span class="comment"># //在右侧调用隐藏的栏目（ID:666）</span></span><br><span class="line"> &lt;li class=<span class="string">"float-right &#123;dede:field name=id runphp='yes'&#125;(@me=='666')?@me='active':@me='';&#123;/dede:field&#125;"</span>&gt;</span><br><span class="line"> &#123;dede:<span class="built_in">type</span> typeid=666&#125;</span><br><span class="line">    &lt;a href=<span class="string">"[field:typeurl /]"</span>&gt;[field:typename /]&lt;/a&gt;</span><br><span class="line"> &#123;/dede:<span class="built_in">type</span>&#125;</span><br><span class="line"> &lt;/li&gt;</span><br></pre></td></tr></table></figure><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><blockquote><p>原文地址:<a href="http://www.dede58.com/a/dedejq/4271.html" target="_blank" rel="noopener">http://www.dede58.com/a/dedejq/4271.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、通过前台直接隐藏栏目&quot;&gt;&lt;a href=&quot;#一、通过前台直接隐藏栏目&quot; class=&quot;headerlink&quot; title=&quot;一、通过前台直接隐藏栏目&quot;&gt;&lt;/a&gt;一、通过前台直接隐藏栏目&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;如果栏目在后台设置显示或者设置隐藏
      
    
    </summary>
    
      <category term="DedeCMS" scheme="https://wangen.github.io/categories/DedeCMS/"/>
    
    
      <category term="DedeCMS" scheme="https://wangen.github.io/tags/DedeCMS/"/>
    
      <category term="栏目" scheme="https://wangen.github.io/tags/%E6%A0%8F%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>Mac OS常用操作命令备忘</title>
    <link href="https://wangen.github.io/2018/01/15/Mac-file-1/"/>
    <id>https://wangen.github.io/2018/01/15/Mac-file-1/</id>
    <published>2018-01-15T15:45:22.000Z</published>
    <updated>2018-01-19T16:43:24.038Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查看复制文件路径"><a href="#查看复制文件路径" class="headerlink" title="查看复制文件路径"></a>查看复制文件路径</h2><p>Launchpad-【其他】中打开<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">``` bash</span><br><span class="line">defaults write com.apple.finder _FXShowPosixPathInTitle -bool YES</span><br></pre></td></tr></table></figure></p><p>之后，就能在Finder顶部看见完整的路径地址了<br><img src="https://github.com/WangEn/BlogBackup/blob/master/blogimgs/macfile101.jpg?raw=true" alt="Finder顶部路径"><br>在Finder顶端的地址栏右键，还可以直接访问路径中的任意一层<br><img src="https://github.com/WangEn/BlogBackup/blob/master/blogimgs/macfile102.jpg?raw=true" alt="Finder右键路径"><br>复制路径的方法：<br>1、推荐方案-『复制路径可以用 Option+Command+C』<br>2、右键文件-显示简介（或者使用快捷键cmd + i），复制位置信息，在文本中粘贴即可得到路径信息。<br>3、打开一个可以粘贴文字的应用（比如说终端，记事本），然后把要获取路径的【文件/文件夹】拖进去，看到的就是对应的绝对路径。</p><h2 id="常用快捷键一览"><a href="#常用快捷键一览" class="headerlink" title="常用快捷键一览"></a>常用快捷键一览</h2><p><img src="https://github.com/WangEn/BlogBackup/blob/master/blogimgs/macfile103.jpg?raw=true" alt="Mac OS X快捷键"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;查看复制文件路径&quot;&gt;&lt;a href=&quot;#查看复制文件路径&quot; class=&quot;headerlink&quot; title=&quot;查看复制文件路径&quot;&gt;&lt;/a&gt;查看复制文件路径&lt;/h2&gt;&lt;p&gt;Launchpad-【其他】中打开&lt;figure class=&quot;highlight plai
      
    
    </summary>
    
      <category term="Mac" scheme="https://wangen.github.io/categories/Mac/"/>
    
    
      <category term="Mac" scheme="https://wangen.github.io/tags/Mac/"/>
    
      <category term="文件操作" scheme="https://wangen.github.io/tags/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    
      <category term="目录路径" scheme="https://wangen.github.io/tags/%E7%9B%AE%E5%BD%95%E8%B7%AF%E5%BE%84/"/>
    
  </entry>
  
  <entry>
    <title>结合layui实现无刷新添加和删除input输入框，自动生成不同name值</title>
    <link href="https://wangen.github.io/2017/12/26/form-input-2/"/>
    <id>https://wangen.github.io/2017/12/26/form-input-2/</id>
    <published>2017-12-26T15:47:09.000Z</published>
    <updated>2017-12-26T15:59:46.755Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前情回顾"><a href="#前情回顾" class="headerlink" title="前情回顾"></a>前情回顾</h3><blockquote><p>随意删除添加后保存到服务端的input，再次编辑时（先调用服务端保存的值）添加新的input输入框name值可能会生成重复，提交保存时，name值重复的input元素会覆盖已有元素。</p></blockquote><p>昨天借鉴<a href="/2017/12/25/form-input-1/">jquery无刷新添加和删除input输入框 增加减少input框</a> 的思路实现了jQuery无刷新随意添加和删除input输入框，但是在使用layui结合ajax提交时，发现随意添加/删除后会生成重复name值的input输入框（比如name=”edu_bg[5]” / name=”edu_bg[6]” / name=”edu_bg[5]” 三个输入框）进行编辑提交，提交后只保存了后两个值，因为layui表单中name不支持数组的形式，相同的name也只会提交最后一个，layui社区也有朋友分享出解决方法：<a href="http://fly.layui.com/jie/9166/" target="_blank" rel="noopener">表单input不支持数组方式询问+解决办法</a>，可以借鉴下。</p><h3 id="思路整理"><a href="#思路整理" class="headerlink" title="思路整理"></a>思路整理</h3><blockquote><p>综合了一大堆搜索及意见，也不想改动框架的代码，决定采用以下方式：</p></blockquote><p>1、获取已经存在的子元素input的长度及name值，将获取的name值推入一个数组arr1中；<br>2、定义初始值key=0,定义插入函数insertInput()，key++循环；<br>3、当edu_bg[key]不在数组arr1中时，创建元素并append()推入父元素内完成，否则，重新执行insertInput()函数。</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><h4 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a>HTML代码</h4><p>主要是定义几个已有的包含input的子元素（模拟从服务端获取的已有元素），然后定义一个包含点击事件的按钮元素。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">"layui-form-item yf-input-del"</span>&gt;</span><br><span class="line">    &lt;label class=<span class="string">"layui-form-label"</span>&gt;教育背景&lt;/label&gt;</span><br><span class="line">    &lt;div class=<span class="string">"layui-input-block"</span> id=<span class="string">"edu_bg"</span>&gt;</span><br><span class="line">        <span class="comment">#//测试随机创建几个连续和不连续的子元素，真实场景下直接循环出你已有的子元素即可</span></span><br><span class="line">        &lt;div class=<span class="string">"layui-input-inline"</span>&gt;</span><br><span class="line">            //input文本框</span><br><span class="line">            &lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"edu_bg[5]"</span> value=<span class="string">""</span> autocomplete=<span class="string">"off"</span> placeholder=<span class="string">"请输入"</span> lay-verify=<span class="string">"required"</span> class=<span class="string">"layui-input"</span>&gt;</span><br><span class="line">            //删除按钮</span><br><span class="line">            &lt;i class=<span class="string">"layui-icon deleteEduBg"</span>&gt;&amp;<span class="comment">#x1006;&lt;/i&gt;</span></span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=<span class="string">"layui-input-inline"</span>&gt;</span><br><span class="line">            &lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"edu_bg[6]"</span> value=<span class="string">""</span> autocomplete=<span class="string">"off"</span> placeholder=<span class="string">"请输入"</span> lay-verify=<span class="string">"required"</span> class=<span class="string">"layui-input"</span>&gt;</span><br><span class="line">            &lt;i class=<span class="string">"layui-icon deleteEduBg"</span>&gt;&amp;<span class="comment">#x1006;&lt;/i&gt;</span></span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=<span class="string">"layui-input-inline"</span>&gt;</span><br><span class="line">            &lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"edu_bg[9]"</span> value=<span class="string">""</span> autocomplete=<span class="string">"off"</span> placeholder=<span class="string">"请输入"</span> lay-verify=<span class="string">"required"</span> class=<span class="string">"layui-input"</span>&gt;</span><br><span class="line">            &lt;i class=<span class="string">"layui-icon deleteEduBg"</span>&gt;&amp;<span class="comment">#x1006;&lt;/i&gt;</span></span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=<span class="string">"layui-form-item"</span> id=<span class="string">"edu_bg_add"</span>&gt;</span><br><span class="line">    &lt;label class=<span class="string">"layui-form-label"</span>&gt;&lt;/label&gt;</span><br><span class="line">    &lt;div class=<span class="string">"layui-input-inline"</span>&gt;</span><br><span class="line">        &lt;a href=<span class="string">"javascript:;"</span> class=<span class="string">"layui-btn site-demo-active"</span> onclick=<span class="string">"insertInput()"</span>&gt;</span><br><span class="line">            &lt;i class=<span class="string">"layui-icon"</span>&gt;&amp;<span class="comment">#xe654;&lt;/i&gt; 新增1条教育背景</span></span><br><span class="line">        &lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a>JavaScript代码</h4><p>定义一个插入函数insertInput()和一个点击删除函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">//引入layui.js</span><br><span class="line">&lt;script src=<span class="string">"/layui/dist/layui.all.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var $ = layui.jquery; //引用layui内置的jQuery，也可以自己调用</span><br><span class="line">    var key1=$(<span class="string">"#edu_bg"</span>).children(<span class="string">".layui-input-inline"</span>).length;</span><br><span class="line">    var FieldCount1=0;</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">insertInput</span></span>() &#123;</span><br><span class="line">        //检索已有的input包含的name值</span><br><span class="line">        var arr1=[];</span><br><span class="line">        FieldCount1++;</span><br><span class="line">        $(<span class="string">"#edu_bg input[type='text']"</span>).each(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">            arr1.push($(this).attr(<span class="string">'name'</span>));</span><br><span class="line">        &#125;);</span><br><span class="line">        //console.log(arr1);</span><br><span class="line">        //所有name加入数组arr1</span><br><span class="line">        var div1 = $(<span class="string">"&lt;div&gt;&lt;/div&gt;"</span>).addClass(<span class="string">"layui-input-inline"</span>);</span><br><span class="line">        //console.log(edu_bg[FieldCount1]);</span><br><span class="line">        var newCount1=<span class="string">"edu_bg["</span>+FieldCount1+<span class="string">"]"</span>;</span><br><span class="line">        //判断新生成的name值是否在已存在的数组中</span><br><span class="line">        <span class="keyword">if</span>($.inArray(newCount1, arr1) === -1)&#123;</span><br><span class="line">            FieldCount1=FieldCount1;</span><br><span class="line">            var input1 = <span class="string">"&lt;input type='text' name='edu_bg["</span>+FieldCount1 +<span class="string">"]' value='' autocomplete='off' placeholder='请输入' lay-verify='required' class='layui-input'&gt;"</span></span><br><span class="line">            var icon1 = <span class="string">"&lt;i class='layui-icon deleteEduBg' onclick='deleteElement(this)'&gt;&amp;#x1006;&lt;/i&gt;"</span>;</span><br><span class="line">            div1.append(input1, icon1);</span><br><span class="line">            $(<span class="string">"#edu_bg"</span>).append(div1);  // 追加新元素</span><br><span class="line">            key1++;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            FieldCount1++;</span><br><span class="line">            insertInput();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $(<span class="string">"body"</span>).on(<span class="string">"click"</span>,<span class="string">".deleteEduBg"</span>, <span class="keyword">function</span>(e)&#123; //user click on remove text  </span><br><span class="line">        <span class="keyword">if</span>( key1 &gt; 1 ) &#123;  </span><br><span class="line">            $(this).parent(<span class="string">'div'</span>).remove(); //移除对应的父级div元素  </span><br><span class="line">            key1--; //decrement textbox  </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            alert(<span class="string">"请至少填写1条教育背景信息！"</span>);</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">false</span>;  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;) </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="补充CSS样式"><a href="#补充CSS样式" class="headerlink" title="补充CSS样式"></a>补充CSS样式</h4><p>这部分没必要，自己来就行，只是为了自己测试时样式顺眼一丢丢。。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"/layui/dist/css/layui.css"</span>&gt;</span><br><span class="line">&lt;style <span class="built_in">type</span>=<span class="string">"text/css"</span>&gt;</span><br><span class="line">    /* 新增删除图标的样式 */</span><br><span class="line">    .yf-input-del .layui-input-inline .layui-input &#123;</span><br><span class="line">        padding-right: 20px;</span><br><span class="line">        margin-bottom: 10px;</span><br><span class="line">    &#125;</span><br><span class="line">    .yf-input-del .layui-input-inline i.layui-icon &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        right: 2px;</span><br><span class="line">        top: 8px;</span><br><span class="line">        color: <span class="comment">#999999;</span></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>整个实现的过程是自己摸索和反复测试的过程，代码中也还有不少需要优化的地方，也可能会在以后的使用中继续优化整改，抛砖引玉，仅供大家参考。</p><blockquote><p>layui官网文档 <a href="http://www.layui.com/doc/" target="_blank" rel="noopener">http://www.layui.com/doc/</a></p><p>jQuery API中文文档 <a href="http://www.css88.com/jqapi-1.9/" target="_blank" rel="noopener">http://www.css88.com/jqapi-1.9/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前情回顾&quot;&gt;&lt;a href=&quot;#前情回顾&quot; class=&quot;headerlink&quot; title=&quot;前情回顾&quot;&gt;&lt;/a&gt;前情回顾&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;随意删除添加后保存到服务端的input，再次编辑时（先调用服务端保存的值）添加新的input输入框
      
    
    </summary>
    
      <category term="form" scheme="https://wangen.github.io/categories/form/"/>
    
    
      <category term="form" scheme="https://wangen.github.io/tags/form/"/>
    
      <category term="input" scheme="https://wangen.github.io/tags/input/"/>
    
      <category term="layui" scheme="https://wangen.github.io/tags/layui/"/>
    
  </entry>
  
  <entry>
    <title>jquery无刷新添加和删除input输入框 增加减少input框</title>
    <link href="https://wangen.github.io/2017/12/25/form-input-1/"/>
    <id>https://wangen.github.io/2017/12/25/form-input-1/</id>
    <published>2017-12-25T14:48:11.000Z</published>
    <updated>2017-12-26T15:49:15.044Z</updated>
    
    <content type="html"><![CDATA[<h3 id="演示说明"><a href="#演示说明" class="headerlink" title="演示说明"></a>演示说明</h3><p><img src="http://www.freejs.net/demo/278/demo.jpg" alt="form-input-1"><br><a href="http://www.freejs.net/demo/278/index.html" target="_blank" rel="noopener">点击查看演示</a></p><h3 id="主要实现代码"><a href="#主要实现代码" class="headerlink" title="主要实现代码"></a>主要实现代码</h3><p>HTML代码部分<br>主要展示一个input输入框，一个点击事件的按钮；删除时判断至少存在一个元素，增加时可以限制最大允许生成的input个数<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;&lt;span&gt;&lt;a href=<span class="string">"#"</span> id=<span class="string">"AddMoreFileBox"</span> class=<span class="string">"btn btn-info"</span>&gt;添加更多的input输入框&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;  </span><br><span class="line">&lt;div id=<span class="string">"InputsWrapper"</span>&gt;  </span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"mytext[]"</span> id=<span class="string">"field_1"</span> value=<span class="string">"Text 1"</span>/&gt;</span><br><span class="line">        &lt;a href=<span class="string">"#"</span> class=<span class="string">"removeclass"</span>&gt;×&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;  </span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>JavaScript代码部分<br>首先引入jQuery文件，调用代码如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;  </span><br><span class="line">$(document).ready(<span class="function"><span class="title">function</span></span>() &#123;  </span><br><span class="line">  </span><br><span class="line">    var MaxInputs       = 8; //maximum input boxes allowed  </span><br><span class="line">    var InputsWrapper   = $(<span class="string">"#InputsWrapper"</span>); //Input boxes wrapper ID  </span><br><span class="line">    var AddButton       = $(<span class="string">"#AddMoreFileBox"</span>); //Add button ID  </span><br><span class="line">  </span><br><span class="line">    var x = InputsWrapper.length; //initlal text box count  </span><br><span class="line">    var FieldCount=1; //to keep track of text box added  </span><br><span class="line">  </span><br><span class="line">    $(AddButton).click(<span class="keyword">function</span> (e)  //on add input button click  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span>(x &lt;= MaxInputs) //max input box allowed  </span><br><span class="line">        &#123;  </span><br><span class="line">            FieldCount++; //text box added increment  </span><br><span class="line">            //add input box  </span><br><span class="line">            $(InputsWrapper).append(<span class="string">'&lt;div&gt;&lt;input type="text" name="mytext['</span>+FieldCount+<span class="string">']" id="field_'</span>+ FieldCount +<span class="string">'" value="Text '</span>+ FieldCount +<span class="string">'"/&gt;&lt;a href="#" class="removeclass"&gt;×&lt;/a&gt;&lt;/div&gt;'</span>);  </span><br><span class="line">            x++; //text box increment  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="built_in">return</span> <span class="literal">false</span>;  </span><br><span class="line">    &#125;);  </span><br><span class="line">  </span><br><span class="line">    $(<span class="string">"body"</span>).on(<span class="string">"click"</span>,<span class="string">".removeclass"</span>, <span class="keyword">function</span>(e)&#123; //user click on remove text  </span><br><span class="line">        <span class="keyword">if</span>( x &gt; 1 ) &#123;  </span><br><span class="line">                $(this).parent(<span class="string">'div'</span>).remove(); //remove text box  </span><br><span class="line">                x--; //decrement textbox  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="built_in">return</span> <span class="literal">false</span>;  </span><br><span class="line">    &#125;)   </span><br><span class="line">  </span><br><span class="line">&#125;);  </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><blockquote><p>原文地址:<a href="http://www.freejs.net/article_biaodan_278.html" target="_blank" rel="noopener">http://www.freejs.net/article_biaodan_278.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;演示说明&quot;&gt;&lt;a href=&quot;#演示说明&quot; class=&quot;headerlink&quot; title=&quot;演示说明&quot;&gt;&lt;/a&gt;演示说明&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://www.freejs.net/demo/278/demo.jpg&quot; alt=&quot;form-i
      
    
    </summary>
    
      <category term="form" scheme="https://wangen.github.io/categories/form/"/>
    
    
      <category term="jQuery" scheme="https://wangen.github.io/tags/jQuery/"/>
    
      <category term="form" scheme="https://wangen.github.io/tags/form/"/>
    
      <category term="input" scheme="https://wangen.github.io/tags/input/"/>
    
  </entry>
  
  <entry>
    <title>使用HTML5 &lt;video&gt; 标签-调用视频的当前播放时间值</title>
    <link href="https://wangen.github.io/2017/12/23/html5-video-2/"/>
    <id>https://wangen.github.io/2017/12/23/html5-video-2/</id>
    <published>2017-12-23T15:37:37.000Z</published>
    <updated>2018-01-13T13:59:05.344Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Video对象"><a href="#Video对象" class="headerlink" title="Video对象"></a>Video对象</h3><p>Video 对象是 HTML5 中的新对象。</p><p>Video 对象表示 HTML &lt; video &gt; 元素。</p><h3 id="currentTime基础使用"><a href="#currentTime基础使用" class="headerlink" title="currentTime基础使用"></a>currentTime基础使用</h3><p>在用HTML5技术处理视频时,设置(setting)和获取(getting)时间都是非常重要的知识点，尤其是对于记录播放时间实现续播的功能。在管理视频状态时，最重要的是要了解 <code>currentTime</code>是个什么鬼,简而言之你可以通过这个属性获取当前播放到了哪个时间点（比如当前播放到了2分30秒，当然<code>currentTime</code> 的单位是 <code>秒</code> (seconds)，所以我们获取到的值是 <code>150</code>）.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// https://www.youtube.com/watch?v=Cwkej79U3ek</span><br><span class="line">console.log(video.currentTime);  // 25.431747</span><br></pre></td></tr></table></figure><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>返回(getter) currentTime 属性(数字值，表示当前播放的时间，以秒计)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">videoObject.currentTime</span><br></pre></td></tr></table></figure><p>设置 currentTime 属性：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">videoObject.currentTime=seconds</span><br></pre></td></tr></table></figure></p><blockquote><p>currentTime 属性设置或返回视频播放的当前位置（以秒计）,当设置该属性时，播放会跳跃到指定的位置。</p></blockquote><h3 id="浏览器支持"><a href="#浏览器支持" class="headerlink" title="浏览器支持"></a>浏览器支持</h3><p>所有主流浏览器都支持 currentTime 属性。</p><blockquote><p>注意：Internet Explorer 8 或更早的浏览器不支持该属性。</p></blockquote><p><code>currentTime</code> 既是 getter 又是 setter 属性, 所以可以直接设置 currentTime 值来控制播放进度:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">video.currentTime = 0; // Restart,初始化设置当前播放到了0秒</span><br></pre></td></tr></table></figure><h3 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h3><p>API 接口很容易理解,而且是自解释的(self-explanatory)。你仍然需要处理“second”来指定时间,包括内在实际的和外在显示的(both inward and outward),但是秒(second)这个单位和你预期的一样公平,所以说这个API设计是非常巧妙的。</p><blockquote><p>使用参考：小米空气净化器 <a href="http://www.mi.com/air/" target="_blank" rel="noopener">http://www.mi.com/air/</a> (页面已撤销)</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;video id=<span class="string">"videoIntro"</span> class=<span class="string">"video"</span> data-video-name=<span class="string">"intro"</span> poster=<span class="string">"http://c1.mifile.cn/f/i/2014/cn/goods/air/overall/video-main-poster.jpg"</span> style=<span class="string">"height: 600px; width: 800px; display: none;"</span>&gt;</span><br><span class="line">    &lt;<span class="built_in">source</span> <span class="built_in">type</span>=<span class="string">"video/mp4"</span> src=<span class="string">"http://c1.mifile.cn/f/i/2014/cn/goods/air/overall/video-intro.mp4?2014120901"</span>&gt;</span><br><span class="line">    &lt;<span class="built_in">source</span> <span class="built_in">type</span>=<span class="string">"video/webm"</span> src=<span class="string">"http://c1.mifile.cn/f/i/2014/cn/goods/air/overall/video-intro.webm?2014120901"</span>&gt;</span><br><span class="line">&lt;/video&gt;</span><br></pre></td></tr></table></figure><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt; </span><br><span class="line">&lt;html&gt; </span><br><span class="line">&lt;head&gt; </span><br><span class="line">&lt;meta charset=<span class="string">"utf-8"</span>&gt; </span><br><span class="line">&lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; </span><br><span class="line">&lt;/head&gt; </span><br><span class="line">&lt;body&gt; </span><br><span class="line"></span><br><span class="line">&lt;video id=<span class="string">"myVideo"</span> width=<span class="string">"320"</span> height=<span class="string">"240"</span> controls&gt;</span><br><span class="line">&lt;<span class="built_in">source</span> src=<span class="string">"http://www.runoob.com/try/demo_source/movie.mp4"</span> <span class="built_in">type</span>=<span class="string">"video/mp4"</span>&gt;</span><br><span class="line">  &lt;<span class="built_in">source</span> src=<span class="string">"http://www.runoob.com/try/demo_source/movie.ogg"</span> <span class="built_in">type</span>=<span class="string">"video/ogg"</span>&gt;</span><br><span class="line">  您的浏览器不支持 video 标签。</span><br><span class="line">&lt;/video&gt;&lt;br&gt;</span><br><span class="line">&lt;button onclick=<span class="string">"getCurTime()"</span> <span class="built_in">type</span>=<span class="string">"button"</span>&gt;获取当前时间点&lt;/button&gt;</span><br><span class="line">&lt;button onclick=<span class="string">"setCurTime()"</span> <span class="built_in">type</span>=<span class="string">"button"</span>&gt;设置时间位置为5秒&lt;/button&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var x = document.getElementById(<span class="string">"myVideo"</span>);</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getCurTime</span></span>()&#123; </span><br><span class="line">alert(x.currentTime);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">setCurTime</span></span>()&#123; </span><br><span class="line">x.currentTime = 5;</span><br><span class="line">&#125; </span><br><span class="line">&lt;/script&gt; </span><br><span class="line"></span><br><span class="line">&lt;/body&gt; </span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>其实关于HTML5-Video视频播放器，还有一款插件可以直接使用：<a href="http://videojs.com/" target="_blank" rel="noopener">Video.js</a>，使用方法和原生比较类似，不过目前中文文档还不多，大家有兴趣可以去了解下。</p><blockquote><p>整理参考1：<a href="http://blog.csdn.net/renfufei/article/details/44522887" target="_blank" rel="noopener">译：获取并设置HTML5 Video的当前进度</a> - <a href="http://davidwalsh.name/html5-video-current-time" target="_blank" rel="noopener">原文地址</a></p><p>整理参考2：<a href="http://www.runoob.com/jsref/prop-video-currenttime.html" target="_blank" rel="noopener">Video currentTime 属性</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Video对象&quot;&gt;&lt;a href=&quot;#Video对象&quot; class=&quot;headerlink&quot; title=&quot;Video对象&quot;&gt;&lt;/a&gt;Video对象&lt;/h3&gt;&lt;p&gt;Video 对象是 HTML5 中的新对象。&lt;/p&gt;
&lt;p&gt;Video 对象表示 HTML &amp;lt;
      
    
    </summary>
    
      <category term="HTML5" scheme="https://wangen.github.io/categories/HTML5/"/>
    
    
      <category term="HTML5" scheme="https://wangen.github.io/tags/HTML5/"/>
    
      <category term="Video" scheme="https://wangen.github.io/tags/Video/"/>
    
      <category term="视频" scheme="https://wangen.github.io/tags/%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>视频播放插件Video.js一些API的使用介绍</title>
    <link href="https://wangen.github.io/2017/12/23/html5-video-1/"/>
    <id>https://wangen.github.io/2017/12/23/html5-video-1/</id>
    <published>2017-12-23T15:37:17.000Z</published>
    <updated>2017-12-23T15:59:07.986Z</updated>
    
    <content type="html"><![CDATA[<h3 id="插件基本说明"><a href="#插件基本说明" class="headerlink" title="插件基本说明"></a>插件基本说明</h3><p>Video.js 是一个通用的在网页上嵌入视频播放器的 JS 库，Video.js 自动检测浏览器对 HTML5 的支持情况，如果不支持 HTML5 则自动使用 Flash 播放器。（要支持ie低版本请下载5.4.3版 ）<br>github地址： <a href="https://github.com/videojs/video.js" target="_blank" rel="noopener">https://github.com/videojs/video.js</a> ，可以自行选择版本标签点击下载。</p><blockquote><p>V6.6.0版本下载地址：<a href="https://codeload.github.com/videojs/video.js/zip/v6.6.0" target="_blank" rel="noopener">点击下载</a><br>V5.4.3旧版本下载地址：<a href="https://codeload.github.com/videojs/video.js/zip/v5.4.3" target="_blank" rel="noopener">下载地址</a></p></blockquote><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="静态调用"><a href="#静态调用" class="headerlink" title="静态调用"></a>静态调用</h4><blockquote><p>引入文件</p></blockquote><p>在页面中引用video-js.css样式文件和video.js<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;link href=<span class="string">"video-js.css"</span> rel=<span class="string">"stylesheet"</span> <span class="built_in">type</span>=<span class="string">"text/css"</span>&gt;</span><br><span class="line">&lt;script src=<span class="string">"video.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>设置flash路径，Video.js会在不支持html5的浏览中使用flash播放视频文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    videojs.options.flash.swf = <span class="string">"video-js.swf"</span>;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><blockquote><p>HTML调用代码</p></blockquote><p>poster=”**”设置播放初始图片。<br>&lt; source src=”” &gt;可设置使用三种视频格式，根据所需要格式选择对应的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;video id=<span class="string">"example_video_1"</span> class=<span class="string">"video-js vjs-default-skin"</span> controls preload=<span class="string">"none"</span> width=<span class="string">"640"</span> height=<span class="string">"264"</span> poster=<span class="string">"http://video-js.zencoder.com/oceans-clip.png"</span> data-setup=<span class="string">"&#123;&#125;"</span>&gt;</span><br><span class="line">    &lt;<span class="built_in">source</span> src=<span class="string">"http://视频地址格式1.mp4"</span> <span class="built_in">type</span>=<span class="string">'video/mp4'</span> /&gt;</span><br><span class="line">    &lt;<span class="built_in">source</span> src=<span class="string">"http://视频地址格式2.webm"</span> <span class="built_in">type</span>=<span class="string">'video/webm'</span> /&gt;</span><br><span class="line">    &lt;<span class="built_in">source</span> src=<span class="string">"http://视频地址格式3.ogv"</span> <span class="built_in">type</span>=<span class="string">'video/ogg'</span> /&gt;</span><br><span class="line">    &lt;track kind=<span class="string">"captions"</span> src=<span class="string">"demo.captions.vtt"</span> srclang=<span class="string">"en"</span> label=<span class="string">"English"</span>&gt;&lt;/track&gt;</span><br><span class="line">    &lt;!-- Tracks need an ending tag thanks to IE9 --&gt;</span><br><span class="line">    &lt;track kind=<span class="string">"subtitles"</span> src=<span class="string">"demo.captions.vtt"</span> srclang=<span class="string">"en"</span> label=<span class="string">"English"</span>&gt;&lt;/track&gt;</span><br><span class="line">    &lt;!-- Tracks need an ending tag thanks to IE9 --&gt;</span><br><span class="line">&lt;/video&gt;</span><br></pre></td></tr></table></figure><blockquote><p>JavaScript设置调用 </p></blockquote><p>通过JavaScript标签设置相关属性，比如设置<code>自动播放</code>，是将如下代码加到html中代码后面<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    var myPlayer = videojs(<span class="string">'example_video_1'</span>);</span><br><span class="line">    videojs(<span class="string">"example_video_1"</span>).ready(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">        var myPlayer = this;</span><br><span class="line">        myPlayer.play();</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><blockquote><p>额外样式自定义</p></blockquote><p>默认情况下，大的播放按钮是被定为在左上角的，这样就不会覆盖视频内容。如果你想让这个播放按钮居中，你可以给你的 video 标签添加额外的 <code>vjs-big-play-centered</code> 样式，比如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;video id=<span class="string">"example_video_1"</span> class=<span class="string">"video-js vjs-default-skin vjs-big-play-centered"</span> controls preload=<span class="string">"auto"</span> width=<span class="string">"640"</span> height=<span class="string">"264"</span> poster=<span class="string">"http://video-js.zencoder.com/oceans-clip.png"</span> data-setup=<span class="string">'&#123;"example_option":true&#125;'</span>&gt;</span><br><span class="line">  ...</span><br><span class="line">&lt;/video&gt;</span><br></pre></td></tr></table></figure><p>如果你还对播放按钮样式不满意可重新定义<code>.video-js .vjs-big-play-button</code>{/<em>继续将这里的样式重写</em>/}。</p><h4 id="动态加载使用"><a href="#动态加载使用" class="headerlink" title="动态加载使用"></a>动态加载使用</h4><p>如果你的 web 页面或者应用是动态加载video标签的（ajax，appendChild，等等）,这样在页面加载后这个元素是不存在的，那么你会想要手动设置播放器而不是依靠<code>data-setup</code>属性。要做到这一点，首先将<code>data-setup</code> 属性从 video 标签中移除掉，这样在播放器初始化的时候就不会混乱了。接下来，运行下面的 JavaScript ，有时在 Video.js 加载后，有时是在 video 标签被加载进 DOM 后:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">videojs(<span class="string">"example_video_1"</span>, &#123;&#125;, <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">  // Player (this) is initialized and ready.</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>videojs 方法中的第一个参数是你的 video 标签的 ID，用你自己的代替。<br>第二个参数是一个选项对象。它允许你像设置<code>data-setup</code>属性一样设置额外的选项。<br>第三个参数是一个’ready’回调。一旦Video.js初始化完成后，就会触发这个回调。</p><p>当然，你也可以传入一个元素本身的引用来代替元素ID：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">videojs(document.getElementById(<span class="string">'example_video_1'</span>), &#123;&#125;, <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">  // This is functionally the same as the previous example.</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">videojs(document.getElementsByClassName(<span class="string">'awesome_video_class'</span>)[0], &#123;&#125;, <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">  // You can grab an element by class <span class="keyword">if</span> you<span class="string">'d like, just make sure</span></span><br><span class="line"><span class="string">  // if it'</span>s an array that you pick one (here we chose the first).</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><blockquote><p>如果您无法播放内容，您得确保使用了正确的格式，你的 HTTP 服务器可能无法提供正确的<code>MIME类型</code>的内容</p></blockquote><h3 id="一些常用的API属性"><a href="#一些常用的API属性" class="headerlink" title="一些常用的API属性"></a>一些常用的API属性</h3><p>获取video实例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var videoObj = videojs(“videoId”);</span><br></pre></td></tr></table></figure></p><p>初始化回调ready：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">myPlayer.ready(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">    //在回调函数中，this代表当前播放器，</span><br><span class="line">    //可以调用方法，也可以绑定事件。</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>播放：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myPlayer.play();</span><br></pre></td></tr></table></figure></p><p>暂停：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myPlayer.pause();</span><br></pre></td></tr></table></figure></p><p>获取播放进度（当前播放时间）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var whereYouAt = myPlayer.currentTime();</span><br></pre></td></tr></table></figure></p><p>设置播放进度：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myPlayer.currentTime(120);</span><br></pre></td></tr></table></figure></p><p>视频持续时间，加载完成视频才可以知道视频时长，且在flash情况下无效:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var howLongIsThis = myPlayer.duration();</span><br></pre></td></tr></table></figure></p><p>缓冲，就是返回下载了多少：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var whatHasBeenBuffered = myPlayer.buffered();</span><br></pre></td></tr></table></figure></p><p>百分比的缓冲：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var howMuchIsDownloaded = myPlayer.bufferedPercent();</span><br></pre></td></tr></table></figure></p><p>声音大小（0-1之间）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var howLoudIsIt = myPlayer.volume();</span><br></pre></td></tr></table></figure></p><p>设置声音大小：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myPlayer.volume(0.5);</span><br></pre></td></tr></table></figure></p><p>获取/设置视频的宽度：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var howWideIsIt = myPlayer.width(); //getter width</span><br><span class="line">myPlayer.width(640); //setter width</span><br><span class="line">var howTallIsIt = myPlayer.height(); //getter height</span><br><span class="line">myPlayer.height(480); //setter height</span><br></pre></td></tr></table></figure></p><p>一步到位，设置视频大小（宽度高度）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myPlayer.size(640,480);</span><br></pre></td></tr></table></figure></p><p>设置进入全屏/退出全屏(HTML5播放器下有效)：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">myPlayer.enterFullScreen();</span><br><span class="line">myPlayer.exitFullScreen();</span><br><span class="line">//http://docs.videojs.com/html5<span class="comment">#enterFullScreen</span></span><br></pre></td></tr></table></figure></p><p>添加事件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">durationchange //提示视频的时长已改变</span><br><span class="line">ended //播放结束</span><br><span class="line">firstplay</span><br><span class="line">fullscreenchange</span><br><span class="line">loadedalldata</span><br><span class="line">loadeddata</span><br><span class="line">loadedmetadata</span><br><span class="line">loadstart</span><br><span class="line">pause //暂停</span><br><span class="line">play  //播放</span><br><span class="line">progress</span><br><span class="line">seeked</span><br><span class="line">seeking</span><br><span class="line">timeupdate</span><br><span class="line">volumechange</span><br><span class="line">waiting</span><br><span class="line">resize inherited</span><br><span class="line">  </span><br><span class="line">var myFunc = <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">    // Do something when the event is fired</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>事件绑定：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">myPlayer.on(<span class="string">"ended"</span>, <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">    console.log(<span class="string">"end"</span>, this.currentTime());</span><br><span class="line">&#125;);</span><br><span class="line">myPlayer.on(<span class="string">"pause"</span>, <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">    console.log(<span class="string">"pause"</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>事件移除：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myPlayer.removeEvent(“eventName”, myFunc);</span><br></pre></td></tr></table></figure></p><blockquote><p>同一页面多个视频调用示例：</p></blockquote><p>一个页面中有多个视频，需要点击后触发bootstrap 的模态窗，再弹出视频，实现如下：<br>主要HTML代码部分：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a videohref=<span class="string">"http://xxx.mp4"</span> class=<span class="string">"video_link"</span>&gt;&lt;img  src=<span class="string">"../images/xxx.jpg"</span>/&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure></p><p>主要JS代码部分：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".video_link"</span>).click(<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">    var myPlayer = videojs(<span class="string">'my-video'</span>);</span><br><span class="line">    var videoUrl = $(this).attr(<span class="string">"videohref"</span>);</span><br><span class="line">    videojs(<span class="string">"my-video"</span>, &#123;&#125;, <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">        window.myPlayer = this;</span><br><span class="line">        $(<span class="string">"#mymoda .video-con #my-video source"</span>).attr(<span class="string">"src"</span>, videoUrl);</span><br><span class="line">        myPlayer.src(videoUrl);</span><br><span class="line">        myPlayer.load(videoUrl);</span><br><span class="line">        myPlayer.play();</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">".click-modal"</span>).click();</span><br><span class="line">&#125;);</span><br><span class="line">// 模态窗消失时，关闭视频    </span><br><span class="line">$(<span class="string">'#mymoda'</span>).on(<span class="string">'hidden.bs.modal'</span>, <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">    myPlayer.pause();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>更多API使用可查看<a href="http://docs.videojs.com/html5" target="_blank" rel="noopener">官网文档</a>。</p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><blockquote><p>转载来源：<a href="http://www.jq22.com/jquery-info404" target="_blank" rel="noopener">视频播放插件Video.js</a><br>插件官网：<a href="http://videojs.com" target="_blank" rel="noopener">Video.js</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;插件基本说明&quot;&gt;&lt;a href=&quot;#插件基本说明&quot; class=&quot;headerlink&quot; title=&quot;插件基本说明&quot;&gt;&lt;/a&gt;插件基本说明&lt;/h3&gt;&lt;p&gt;Video.js 是一个通用的在网页上嵌入视频播放器的 JS 库，Video.js 自动检测浏览器对 HTM
      
    
    </summary>
    
      <category term="HTML5" scheme="https://wangen.github.io/categories/HTML5/"/>
    
    
      <category term="HTML5" scheme="https://wangen.github.io/tags/HTML5/"/>
    
      <category term="Video" scheme="https://wangen.github.io/tags/Video/"/>
    
      <category term="Video.js" scheme="https://wangen.github.io/tags/Video-js/"/>
    
      <category term="视频" scheme="https://wangen.github.io/tags/%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>如何优雅的在 Microsoft word中插入代码</title>
    <link href="https://wangen.github.io/2017/12/20/office-word-1/"/>
    <id>https://wangen.github.io/2017/12/20/office-word-1/</id>
    <published>2017-12-20T15:10:14.000Z</published>
    <updated>2017-12-20T15:19:21.304Z</updated>
    
    <content type="html"><![CDATA[<h2 id="打开在线编辑代码网站"><a href="#打开在线编辑代码网站" class="headerlink" title="打开在线编辑代码网站"></a>打开在线编辑代码网站</h2><p>打开<a href="http://www.planetb.ca/syntax-highlight-word" target="_blank" rel="noopener">PlanetB 代码编辑高亮网站</a> </p><h2 id="编辑代码"><a href="#编辑代码" class="headerlink" title="编辑代码"></a>编辑代码</h2><p>1、将你需要插入在word中的代码完整的复制到该网站提示的文本框内，选择你的代码类型，如PHP,JavaScript,HTML等，并点击提交。<br>2、页面会自动跳转生成一个新的页面，包含编辑格式后的代码，此时ctrl+A全选，后ctrl+c复制到word中粘贴就好。</p><h2 id="在Word中使用"><a href="#在Word中使用" class="headerlink" title="在Word中使用"></a>在Word中使用</h2><p>1、插入-表格-插入1*1的表格<br>2、光标放在表格中，将刚刚复制的代码粘贴进入<br>3、设置仅对该文档不使用语法检查</p><blockquote><p>原文地址：<a href="http://blog.csdn.net/u011303443/article/details/50992651" target="_blank" rel="noopener">如何优雅的在 Microsoft word中插入代码</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;打开在线编辑代码网站&quot;&gt;&lt;a href=&quot;#打开在线编辑代码网站&quot; class=&quot;headerlink&quot; title=&quot;打开在线编辑代码网站&quot;&gt;&lt;/a&gt;打开在线编辑代码网站&lt;/h2&gt;&lt;p&gt;打开&lt;a href=&quot;http://www.planetb.ca/synta
      
    
    </summary>
    
      <category term="Office" scheme="https://wangen.github.io/categories/Office/"/>
    
    
      <category term="Microsoft" scheme="https://wangen.github.io/tags/Microsoft/"/>
    
      <category term="Word" scheme="https://wangen.github.io/tags/Word/"/>
    
      <category term="Code" scheme="https://wangen.github.io/tags/Code/"/>
    
  </entry>
  
  <entry>
    <title>使用Firefox火狐浏览器模拟手机等多种浏览器</title>
    <link href="https://wangen.github.io/2017/12/19/firefox-set-1/"/>
    <id>https://wangen.github.io/2017/12/19/firefox-set-1/</id>
    <published>2017-12-19T15:58:31.000Z</published>
    <updated>2017-12-20T15:08:47.040Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载旧版本Firefox浏览器"><a href="#下载旧版本Firefox浏览器" class="headerlink" title="下载旧版本Firefox浏览器"></a>下载旧版本Firefox浏览器</h2><p>官方下载地址：<a href="http://ftp.mozilla.org/pub/firefox/releases/" target="_blank" rel="noopener">http://ftp.mozilla.org/pub/firefox/releases/</a><br>因为最新更新的Firefox57版本使用了新引擎，之前的绝大部分扩展组件都不再支持，所以我们要选用适合自己电脑系统的旧版本Firefox浏览器下载作为开发使用。<br>我先用的是<a href="http://ftp.mozilla.org/pub/firefox/releases/53.0/win64/" target="_blank" rel="noopener">Firefox 53.0 64位版本</a>（win10 64位系统环境下），仅作为参考</p><blockquote><p>安装完成后，打开浏览器在【工具】-【选项】-【高级】-【更新】中选择“不检查更新”</p></blockquote><h2 id="安装附加组件User-Agent-Switcher"><a href="#安装附加组件User-Agent-Switcher" class="headerlink" title="安装附加组件User Agent Switcher"></a>安装附加组件User Agent Switcher</h2><p>【工具】-【附加组件】-【搜索】User Agent Switcher，安装后重启浏览器</p><blockquote><p>点击菜单栏的【工具】下拉，选择”iPhone3.0”选项即可在火狐浏览器模拟手机浏览器了</p></blockquote><h2 id="扩展UA列表伪装更多平台版本"><a href="#扩展UA列表伪装更多平台版本" class="headerlink" title="扩展UA列表伪装更多平台版本"></a>扩展UA列表伪装更多平台版本</h2><p>1、工具-default user agent-User Agent Switcher-options，打开User Agent Switcher选项卡，点击右下角网页链接，就能找到最常用的UA列表了<br>2、打开techpatterns网页，下载网页为你提供的.xml文件地址。如果觉得此步骤麻烦，点击以下下载地址进入下载。<br>下载地址：<a href="https://techpatterns.com/forums/about304.html" target="_blank" rel="noopener">https://techpatterns.com/forums/about304.html</a><br>点击 <code>Download via Save As File Dialogue</code>将xml文件下载到本地。<br>3、打开 【User Agent Switcher】组件，在该组件面板【选项】中导入下载的xml文件后重启浏览器即可。导入下载好的.xml文件，即可体验更多的平台模拟了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;下载旧版本Firefox浏览器&quot;&gt;&lt;a href=&quot;#下载旧版本Firefox浏览器&quot; class=&quot;headerlink&quot; title=&quot;下载旧版本Firefox浏览器&quot;&gt;&lt;/a&gt;下载旧版本Firefox浏览器&lt;/h2&gt;&lt;p&gt;官方下载地址：&lt;a href=&quot;ht
      
    
    </summary>
    
      <category term="Browser" scheme="https://wangen.github.io/categories/Browser/"/>
    
    
      <category term="Firefox" scheme="https://wangen.github.io/tags/Firefox/"/>
    
      <category term="组件" scheme="https://wangen.github.io/tags/%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>制作透明背景 PNG 图片和 GIF 动图的几种方法</title>
    <link href="https://wangen.github.io/2017/12/17/png-gif-transparency/"/>
    <id>https://wangen.github.io/2017/12/17/png-gif-transparency/</id>
    <published>2017-12-16T16:51:42.000Z</published>
    <updated>2018-01-13T13:58:59.421Z</updated>
    
    <content type="html"><![CDATA[<p>偶尔需要将图片的背景透明，渐渐掌握了几种较为简便的处理方法。写篇文章记录一下经验，免得自己哪天又忘了。</p><h2 id="PowerPoint-→-PNG"><a href="#PowerPoint-→-PNG" class="headerlink" title="PowerPoint → PNG"></a>PowerPoint → PNG</h2><blockquote><p>微软幻灯片工具 PowerPoint 也可以用来简单处理下图片，比如透明化背景。</p></blockquote><p>1、打开 PowerPoint，新建一张幻灯片页面，然后把待处理的图片拖进去。<br>2、依次点击 <strong>格式</strong> 选项卡 - <strong>颜色</strong> 菜单 - <strong>设置透明色</strong> - 点选 <strong>背景色</strong>。这样背景就透明化了，再右键图片另存为 <code>PNG 格式</code> 即可。<br>3、 <strong>删除背景</strong> 功能类似，不过感觉没上面的方式快捷。</p><p><img src="http://moxfive.xyz/resources/PPT-PNG.jpg" alt="PPT-PNG"></p><h2 id="PhotoShop-→-PNG"><a href="#PhotoShop-→-PNG" class="headerlink" title="PhotoShop → PNG"></a>PhotoShop → PNG</h2><blockquote><p>如果电脑上安了 PhotoShop，那我们可以更灵活地制作透明背景图片。<br>1、用 PS 打开待处理的静态图片，双击图层框右侧小锁标志解锁图层;<br>2、选用魔棒工具，调整容差为10左右(容差越大，选取的相似颜色越多)，勾选消除锯齿;<br>3、点选背景，按键盘 <code>del</code>键删除之(按住 <code>shift</code> 键可以多选)，之后将图片另存为 PNG 格式即可。<br><img src="http://moxfive.xyz/resources/PS-PNG.jpg" alt="PS-PNG"></p></blockquote><h2 id="PhotoShop-→-GIF"><a href="#PhotoShop-→-GIF" class="headerlink" title="PhotoShop → GIF"></a>PhotoShop → GIF</h2><blockquote><p>PhotoShop 用来透明化 GIF 动图背景也是很方便的。<br>1、用 PS 打开待处理的 GIF 动图，并确保时间轴窗口已显示(窗口菜单 - 勾选时间轴)；<br>2、全选时间轴中的图片(可利用 <code>shift</code> 键全选)，右键图片，勾选自动(跳过此步生产的动图会有重影)；<br>3、点击文件菜单 - 存储为 Web 所用格式…；<br>4、在颜色表中，先点选的小星点，再点击下方第一个按钮将背景透明，之后点击存储…保存 GIF 到目标位置即可。<br><img src="http://moxfive.xyz/resources/PS-GIF-1.jpg" alt="PS-GIF-1"><br><img src="http://moxfive.xyz/resources/PS-GIF-2.jpg" alt="PS-GIF-2"></p></blockquote><h2 id="一些成品"><a href="#一些成品" class="headerlink" title="一些成品"></a>一些成品</h2><blockquote><p>展示一些已经透明化背景的图片。<br><img src="http://moxfive.xyz/resources/Mihawk.gif" alt="Mihawk"><img src="http://moxfive.xyz/resources/food-boy.gif" alt="food-boy"><img src="http://moxfive.xyz/resources/bilibili.gif" alt="bilibili"></p></blockquote><h4 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h4><blockquote><ul><li>移动端图片格式调研 by ibireme on 2015/11/2: <a href="http://blog.ibireme.com/2015/11/02/mobile_image_benchmark/" target="_blank" rel="noopener">http://blog.ibireme.com/2015/11/02/mobile_image_benchmark/</a></li><li>解决GIF动画图去背景后出现的重影 by 有烟飘过 on 2010/5/10: <a href="http://tieba.baidu.com/p/2106457600" target="_blank" rel="noopener">http://tieba.baidu.com/p/2106457600</a></li><li>制作透明背景 PNG 图片和 GIF 动图的几种方法 by MOxFIVE on 2015-11-17: <a href="http://moxfive.xyz/2015/11/16/png-gif-transparency/" target="_blank" rel="noopener">http://moxfive.xyz/2015/11/16/png-gif-transparency/</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;偶尔需要将图片的背景透明，渐渐掌握了几种较为简便的处理方法。写篇文章记录一下经验，免得自己哪天又忘了。&lt;/p&gt;
&lt;h2 id=&quot;PowerPoint-→-PNG&quot;&gt;&lt;a href=&quot;#PowerPoint-→-PNG&quot; class=&quot;headerlink&quot; title=&quot;P
      
    
    </summary>
    
      <category term="Images" scheme="https://wangen.github.io/categories/Images/"/>
    
    
      <category term="png" scheme="https://wangen.github.io/tags/png/"/>
    
      <category term="gif" scheme="https://wangen.github.io/tags/gif/"/>
    
      <category term="Photoshop" scheme="https://wangen.github.io/tags/Photoshop/"/>
    
      <category term="PowerPoint" scheme="https://wangen.github.io/tags/PowerPoint/"/>
    
  </entry>
  
  <entry>
    <title>DedeCMS技术可参考网站备份</title>
    <link href="https://wangen.github.io/2017/12/17/dede-web-1/"/>
    <id>https://wangen.github.io/2017/12/17/dede-web-1/</id>
    <published>2017-12-16T16:25:27.000Z</published>
    <updated>2017-12-16T16:32:26.428Z</updated>
    
    <content type="html"><![CDATA[<h2 id="DedeCMS技术点及模板使用可参考网站部分备忘"><a href="#DedeCMS技术点及模板使用可参考网站部分备忘" class="headerlink" title="DedeCMS技术点及模板使用可参考网站部分备忘"></a>DedeCMS技术点及模板使用可参考网站部分备忘</h2><p>存在即合理,流行就代表优秀…</p><blockquote><p>1、<a href="http://www.dedediy.com/luojishuju/" target="_blank" rel="noopener">织梦二次开发</a></p><p>2、<a href="http://www.dedejs.com/html/list-11.html" target="_blank" rel="noopener">CMS资源网</a></p><p>3、<a href="http://www.dede58.com/a/dedeaz/2792.html" target="_blank" rel="noopener">织梦58</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;DedeCMS技术点及模板使用可参考网站部分备忘&quot;&gt;&lt;a href=&quot;#DedeCMS技术点及模板使用可参考网站部分备忘&quot; class=&quot;headerlink&quot; title=&quot;DedeCMS技术点及模板使用可参考网站部分备忘&quot;&gt;&lt;/a&gt;DedeCMS技术点及模板使
      
    
    </summary>
    
      <category term="DedeCMS" scheme="https://wangen.github.io/categories/DedeCMS/"/>
    
    
      <category term="DedeCMS" scheme="https://wangen.github.io/tags/DedeCMS/"/>
    
      <category term="参考网站" scheme="https://wangen.github.io/tags/%E5%8F%82%E8%80%83%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>Dedecms织梦会员邮件验证与自定义表单发送邮件-官方类版-支持QQ邮箱163邮箱</title>
    <link href="https://wangen.github.io/2017/12/17/dede-email-1/"/>
    <id>https://wangen.github.io/2017/12/17/dede-email-1/</id>
    <published>2017-12-16T16:11:03.000Z</published>
    <updated>2018-01-13T10:34:38.121Z</updated>
    
    <content type="html"><![CDATA[<h4 id="会员邮件验证效果"><a href="#会员邮件验证效果" class="headerlink" title="会员邮件验证效果"></a>会员邮件验证效果</h4><p><img src="http://www.dedediy.com/uploads/allimg/QQimg20171031201926.png" alt="member-email"></p><h4 id="自定义表单发送邮件效果"><a href="#自定义表单发送邮件效果" class="headerlink" title="自定义表单发送邮件效果"></a>自定义表单发送邮件效果</h4><p><img src="http://www.dedediy.com/uploads/allimg/QQimg20171031201550.png" alt="form-email"></p><h2 id="设置步骤如下："><a href="#设置步骤如下：" class="headerlink" title="设置步骤如下："></a>设置步骤如下：</h2><h4 id="1、QQ邮箱-或者-163邮箱-开启SMTP服务，拿到授权码"><a href="#1、QQ邮箱-或者-163邮箱-开启SMTP服务，拿到授权码" class="headerlink" title="1、QQ邮箱 或者 163邮箱 开启SMTP服务，拿到授权码"></a>1、QQ邮箱 或者 163邮箱 开启SMTP服务，拿到授权码</h4><p><img src="http://www.dedediy.com/uploads/allimg/QQimg20171031202215.png" alt="email-shouquanma"></p><h4 id="2、网站后台-系统-系统基本参数-核心设置"><a href="#2、网站后台-系统-系统基本参数-核心设置" class="headerlink" title="2、网站后台 - 系统 - 系统基本参数 - 核心设置"></a>2、网站后台 - 系统 - 系统基本参数 - 核心设置</h4><blockquote><p>网站发信EMAIL：wuruhua@163.com 或者 65602960@qq.com (本文邮箱均为示例，请按需求填写自己的邮箱)</p><p>是否启用smtp方式发送邮件：是</p><p>smtp服务器：ssl://smtp.163.com 或者 ssl://smtp.qq.com</p><p>smtp服务器端口：465</p><p>SMTP服务器的用户邮箱：wuruhua@163.com 或者 65602960@qq.com</p><p>SMTP服务器的用户帐号：wuruhua 或者 65602960</p><p>SMTP服务器的用户密码：填你邮箱授权码，不是邮箱登录密码</p></blockquote><p>如图</p><blockquote><p>配置QQ邮箱的是这样<br><img src="http://www.dedediy.com/uploads/allimg/QQimg20171031195906.png" alt="email-qq-set"></p><p>配置163邮箱的是这样<br><img src="http://www.dedediy.com/uploads/allimg/QQimg20171031195754.png" alt="email-163-set"></p><p>至此会员邮件验证配置完成，会员就能收到验证邮件了；自定义表单发送邮件的小伙伴继续往下看</p></blockquote><h4 id="3、网站后台-系统-系统基本参数-添加新变量"><a href="#3、网站后台-系统-系统基本参数-添加新变量" class="headerlink" title="3、网站后台 - 系统 - 系统基本参数 - 添加新变量"></a>3、网站后台 - 系统 - 系统基本参数 - 添加新变量</h4><blockquote><p>变量名称：cfg_shoujianren<br>变量类型：文本<br>参数说明：收件人<br>变量值：发送邮件通知者，如65602960@qq.com<br>所属组：站点设置</p></blockquote><p>如图<br><img src="http://www.dedediy.com/uploads/allimg/QQimg20171031203350.png" alt="system-set"></p><h4 id="4、打开-plus-diy-php-找到"><a href="#4、打开-plus-diy-php-找到" class="headerlink" title="4、打开 /plus/diy.php 找到"></a>4、打开 /plus/diy.php 找到</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$id</span> = <span class="variable">$dsql</span>-&gt;GetLastID();</span><br></pre></td></tr></table></figure><p>在它的下面加入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$mailtitle</span> = <span class="string">"&#123;<span class="variable">$diy</span>-&gt;name&#125;--留言通知"</span>;</span><br><span class="line"><span class="variable">$mailbody</span> = <span class="string">''</span>;</span><br><span class="line">foreach(<span class="variable">$diy</span>-&gt;getFieldList() as <span class="variable">$field</span>=&gt;<span class="variable">$fieldvalue</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$mailbody</span> .= <span class="string">"&#123;<span class="variable">$fieldvalue</span>[0]&#125;:&#123;<span class="variable">$&#123;$field&#125;</span>&#125;\r\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$headers</span> = <span class="string">"From: "</span>.<span class="variable">$cfg_adminemail</span>.<span class="string">"\r\nReply-To: "</span>.<span class="variable">$cfg_adminemail</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$cfg_sendmail_bysmtp</span> == <span class="string">'Y'</span> &amp;&amp; !empty(<span class="variable">$cfg_smtp_server</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$mailtype</span> = <span class="string">'TXT'</span>;</span><br><span class="line">require_once(DEDEINC.<span class="string">'/mail.class.php'</span>);</span><br><span class="line"><span class="variable">$smtp</span> = new smtp(<span class="variable">$cfg_smtp_server</span>,<span class="variable">$cfg_smtp_port</span>,<span class="literal">true</span>,<span class="variable">$cfg_smtp_usermail</span>,<span class="variable">$cfg_smtp_password</span>);</span><br><span class="line"><span class="variable">$smtp</span>-&gt;debug = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$smtp</span>-&gt;sendmail(<span class="variable">$cfg_shoujianren</span>,<span class="variable">$cfg_webname</span> ,<span class="variable">$cfg_smtp_usermail</span>, <span class="variable">$mailtitle</span>, <span class="variable">$mailbody</span>, <span class="variable">$mailtype</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">@mail(<span class="variable">$cfg_shoujianren</span>, <span class="variable">$mailtitle</span>, <span class="variable">$mailbody</span>, <span class="variable">$headers</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至此自定义表单发送邮件通知管理者设置完成</p><p>本文来源<a href="http://www.dedediy.com/luojishuju/175.html" target="_blank" rel="noopener">www.dedediy.com</a> ，仅作为备份参考使用</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;会员邮件验证效果&quot;&gt;&lt;a href=&quot;#会员邮件验证效果&quot; class=&quot;headerlink&quot; title=&quot;会员邮件验证效果&quot;&gt;&lt;/a&gt;会员邮件验证效果&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://www.dedediy.com/uploads/allim
      
    
    </summary>
    
      <category term="DedeCMS" scheme="https://wangen.github.io/categories/DedeCMS/"/>
    
    
      <category term="DedeCMS" scheme="https://wangen.github.io/tags/DedeCMS/"/>
    
      <category term="邮件" scheme="https://wangen.github.io/tags/%E9%82%AE%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>dedecms织梦列表页内容页栏目高亮和当前栏目调用二级三级栏目</title>
    <link href="https://wangen.github.io/2017/12/16/dede-list-2/"/>
    <id>https://wangen.github.io/2017/12/16/dede-list-2/</id>
    <published>2017-12-16T04:00:39.000Z</published>
    <updated>2018-01-20T13:56:26.133Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在处理企业站的时候，经常会用到在列表页或内容页调用二三级栏目，且需要跟随栏目切换高亮显示。</p></blockquote><p><img src="http://www.dedediy.com/uploads/allimg/channlecurrent.gif" alt="channlecurrent"></p><h2 id="具体实现方法如下"><a href="#具体实现方法如下" class="headerlink" title="具体实现方法如下"></a>具体实现方法如下</h2><h3 id="1、打开-include-taglib-channelartlist-lib-php-找到"><a href="#1、打开-include-taglib-channelartlist-lib-php-找到" class="headerlink" title="1、打开 \include\taglib\channelartlist.lib.php 找到"></a>1、打开 \include\taglib\channelartlist.lib.php 找到</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$tpsql</span> = <span class="string">" reid='<span class="variable">$typeid</span>' AND ispart&lt;&gt;2 AND ishidden&lt;&gt;1 "</span>;</span><br></pre></td></tr></table></figure><p>改成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$type</span>==<span class="string">'son'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$typeid</span> = ( !empty(<span class="variable">$refObj</span>-&gt;TypeLink-&gt;TypeInfos[<span class="string">'id'</span>]) ?  GetTopid(<span class="variable">$refObj</span>-&gt;TypeLink-&gt;TypeInfos[<span class="string">'id'</span>]) : 0 );</span><br><span class="line"><span class="variable">$tpsql</span> = <span class="string">" reid='<span class="variable">$typeid</span>' AND ishidden&lt;&gt;1 "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$tpsql</span> = <span class="string">" reid='<span class="variable">$typeid</span>' AND ispart&lt;&gt;2 AND ishidden&lt;&gt;1 "</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、打开-include-taglib-channel-lib-php-找到"><a href="#2、打开-include-taglib-channel-lib-php-找到" class="headerlink" title="2、打开 \include\taglib\channel.lib.php 找到"></a>2、打开 \include\taglib\channel.lib.php 找到</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$type</span>==<span class="string">'son'</span> &amp;&amp; <span class="variable">$reid</span>!=0 &amp;&amp; <span class="variable">$totalRow</span>==0)</span><br></pre></td></tr></table></figure><p>改成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$type</span>==<span class="string">'son'</span> &amp;&amp; <span class="variable">$reid</span>!=0 &amp;&amp; <span class="variable">$totalRow</span>==0 &amp;&amp; <span class="variable">$noself</span>==<span class="string">''</span>)</span><br></pre></td></tr></table></figure><h3 id="3、去掉模板引擎禁用PHP标签"><a href="#3、去掉模板引擎禁用PHP标签" class="headerlink" title="3、去掉模板引擎禁用PHP标签"></a>3、去掉模板引擎禁用PHP标签</h3><p>后台-系统-其它选项 模板引擎禁用标签 去掉php<br><img src="http://www.dedediy.com/uploads/allimg/QQimg20170807131443.png" alt="去掉PHP标签禁用"></p><h2 id="前台模板文件中调用代码如下："><a href="#前台模板文件中调用代码如下：" class="headerlink" title="前台模板文件中调用代码如下："></a>前台模板文件中调用代码如下：</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">&#123;dede:php&#125;</span><br><span class="line">$GLOBALS['thisid'] = intval($refObj-&gt;Fields['typeid']);</span><br><span class="line">$GLOBALS['reid'] = intval($refObj-&gt;Fields['reid']);</span><br><span class="line">$GLOBALS['topid'] = intval($refObj-&gt;Fields['topid']);</span><br><span class="line">&#123;/dede:php&#125;</span><br><span class="line">&#123;dede:channelartlist type=son&#125;</span><br><span class="line">    &lt;li&#123;dede:field.typeid runphp=yes&#125;(@me==$GLOBALS['thisid']||@me==$GLOBALS['reid']||@me==$GLOBALS['topid'])? @me=' class="current"':@me='';&#123;/dede:field.typeid&#125;&gt;&lt;a href='&#123;dede:field.typeurl/&#125;' &gt;&#123;dede:field.typename/&#125;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">    &#123;dede:channel type=son noself=yes&#125;</span><br><span class="line">    &lt;li[field:id runphp=yes](@me==$GLOBALS['thisid'])? @me=' class="current2"':@me='';[/field:id]&gt;&lt;a href='[field:typelink /]' title='[field:typename/]'&gt;[field:typename/]&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &#123;/dede:channel&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&#123;/dede:channelartlist&#125;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>至此，全部完成。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;在处理企业站的时候，经常会用到在列表页或内容页调用二三级栏目，且需要跟随栏目切换高亮显示。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://www.dedediy.com/uploads/allimg/channlecu
      
    
    </summary>
    
      <category term="DedeCMS" scheme="https://wangen.github.io/categories/DedeCMS/"/>
    
    
      <category term="DedeCMS" scheme="https://wangen.github.io/tags/DedeCMS/"/>
    
      <category term="栏目" scheme="https://wangen.github.io/tags/%E6%A0%8F%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>DedeCMS栏目添加自定义字段，增加栏目上传缩略图功能</title>
    <link href="https://wangen.github.io/2017/12/16/dede-list-1/"/>
    <id>https://wangen.github.io/2017/12/16/dede-list-1/</id>
    <published>2017-12-16T03:28:35.000Z</published>
    <updated>2018-01-20T13:56:41.358Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我们用织梦制作时，点击进入每个栏目时，都会有“关于我们”，“新闻中心”，“产品展示”等提示性的图片，单独调用这些图片比较麻烦，我们可以修改程序，实现每个栏目都有上传栏目缩略图的功能，就方便多了。</p></blockquote><h2 id="修改方法如下："><a href="#修改方法如下：" class="headerlink" title="修改方法如下："></a>修改方法如下：</h2><h3 id="第一步：执行SQL命令为数据库的栏目表结构添加一个字段"><a href="#第一步：执行SQL命令为数据库的栏目表结构添加一个字段" class="headerlink" title="第一步：执行SQL命令为数据库的栏目表结构添加一个字段"></a>第一步：执行SQL命令为数据库的栏目表结构添加一个字段</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table `dede_arctype` add `typeimg` char(100) NOT NULL default <span class="string">''</span>;</span><br></pre></td></tr></table></figure><h3 id="第二步：修改涉及到文件："><a href="#第二步：修改涉及到文件：" class="headerlink" title="第二步：修改涉及到文件："></a>第二步：修改涉及到文件：</h3><ul><li style="list-style: none"><input type="checkbox" checked> dede/catalog_add.php </li><li style="list-style: none"><input type="checkbox" checked> dede/catalog_edit.php</li><li style="list-style: none"><input type="checkbox" checked> dede/templets/catalog_add.htm</li><li style="list-style: none"><input type="checkbox" checked> dede/templets/catalog_edit.htm<h4 id="1、打开dede-catalog-add-php"><a href="#1、打开dede-catalog-add-php" class="headerlink" title="1、打开dede/catalog_add.php"></a>1、打开dede/catalog_add.php</h4></li></ul><p>查找<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$queryTemplate</span> = <span class="string">"INSERT INTO `#@__arctype`</span></span><br></pre></td></tr></table></figure></p><p>定义添加新变量字段typeimg,将<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(reid,topid,sortrank,typename,typedir,</span><br></pre></td></tr></table></figure></p><p>修改为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(reid,topid,sortrank,typename,typedir,typeimg,</span><br></pre></td></tr></table></figure></p><p>将<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="string">'~reid~'</span>,<span class="string">'~topid~'</span>,<span class="string">'~rank~'</span>,<span class="string">'~typename~'</span>,<span class="string">'~typedir~'</span>,</span><br></pre></td></tr></table></figure></p><p>修改为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="string">'~reid~'</span>,<span class="string">'~topid~'</span>,<span class="string">'~rank~'</span>,<span class="string">'~typename~'</span>,<span class="string">'~typedir~'</span>,<span class="string">'~typeimg~'</span>,</span><br></pre></td></tr></table></figure></p><h4 id="2、打开dede-catalog-edit-php"><a href="#2、打开dede-catalog-edit-php" class="headerlink" title="2、打开dede/catalog_edit.php"></a>2、打开dede/catalog_edit.php</h4><p>查找(一般是Ctrl+F快捷键)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$upquery</span> = <span class="string">"Update</span></span><br></pre></td></tr></table></figure></p><p>在其下面新加一行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">typeimg=<span class="string">'$typeimg'</span>,</span><br></pre></td></tr></table></figure></p><h4 id="3、打开dede-templets-catalog-add-htm"><a href="#3、打开dede-templets-catalog-add-htm" class="headerlink" title="3、打开dede/templets/catalog_add.htm"></a>3、打开dede/templets/catalog_add.htm</h4><p>修改后台的页面模板，查找<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;tr&gt;</span><br><span class="line">   &lt;td height=<span class="string">"26"</span> style=<span class="string">"padding-left:10px;"</span>&gt;列表命名规则：&lt;/td&gt;</span><br><span class="line">   &lt;td&gt;</span><br><span class="line">      &lt;input name=<span class="string">"namerule2"</span> <span class="built_in">type</span>=<span class="string">"text"</span> id=<span class="string">"namerule2"</span> value=<span class="string">"&#123;typedir&#125;/list_&#123;tid&#125;_&#123;page&#125;.html"</span>  class=<span class="string">"pubinputs"</span>  style=<span class="string">"width:250px"</span> /&gt;</span><br><span class="line">      &lt;img src=<span class="string">"images/help.gif"</span> alt=<span class="string">"帮助"</span> width=<span class="string">"16"</span> height=<span class="string">"16"</span> border=<span class="string">"0"</span> style=<span class="string">"cursor:pointer"</span> onClick=<span class="string">"ShowHide('helpvar3')"</span>/&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure></p><p>在其下面增加以下内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;tr&gt;</span><br><span class="line">  &lt;td height=<span class="string">"65"</span> style=<span class="string">"padding-left:10px;"</span>&gt;栏目图片：&lt;/td&gt;</span><br><span class="line">  &lt;td&gt;</span><br><span class="line">     &lt;input name=<span class="string">"typeimg"</span> <span class="built_in">type</span>=<span class="string">"text"</span> style=<span class="string">"width:250px"</span> id=<span class="string">"typeimg"</span> class=<span class="string">"alltxt"</span> value=<span class="string">""</span> /&gt;</span><br><span class="line"> &lt;input <span class="built_in">type</span>=<span class="string">"button"</span> name=<span class="string">"set9"</span> value=<span class="string">"浏览... "</span>class=<span class="string">"coolbg np"</span> style=<span class="string">"width:60px"</span> onClick=<span class="string">"SelectImage('form1.typeimg','');"</span> /&gt;</span><br><span class="line">   &lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure></p><p>并在文件的<head></head>里面增加以下内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">'javascript'</span> src=<span class="string">"js/main.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><h4 id="4、打开dede-templets-catalog-edit-htm"><a href="#4、打开dede-templets-catalog-edit-htm" class="headerlink" title="4、打开dede/templets/catalog_edit.htm"></a>4、打开dede/templets/catalog_edit.htm</h4><p>在第3步文件（同上catalog_add.htm）同样的位置插入修改：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;tr&gt;</span><br><span class="line">   &lt;td height=<span class="string">"26"</span> style=<span class="string">"padding-left:10px;"</span>&gt;列表命名规则：&lt;/td&gt;</span><br><span class="line">   &lt;td&gt;</span><br><span class="line">      &lt;input name=<span class="string">"namerule2"</span> <span class="built_in">type</span>=<span class="string">"text"</span> id=<span class="string">"namerule2"</span> value=<span class="string">"&#123;typedir&#125;/list_&#123;tid&#125;_&#123;page&#125;.html"</span>  class=<span class="string">"pubinputs"</span>  style=<span class="string">"width:250px"</span> /&gt;</span><br><span class="line">      &lt;img src=<span class="string">"images/help.gif"</span> alt=<span class="string">"帮助"</span> width=<span class="string">"16"</span> height=<span class="string">"16"</span> border=<span class="string">"0"</span> style=<span class="string">"cursor:pointer"</span> onClick=<span class="string">"ShowHide('helpvar3')"</span>/&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure></p><p>在其下面加入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;tr&gt;</span><br><span class="line">  &lt;td height=<span class="string">"65"</span> style=<span class="string">"padding-left:10px;"</span>&gt;栏目图片：&lt;/td&gt;</span><br><span class="line">  &lt;td&gt;</span><br><span class="line">     &lt;input name=<span class="string">"typeimg"</span> <span class="built_in">type</span>=<span class="string">"text"</span> style=<span class="string">"width:250px"</span> id=<span class="string">"typeimg"</span> class=<span class="string">"alltxt"</span> value=<span class="string">"&lt;?php echo <span class="variable">$myrow</span>['typeimg']?&gt;"</span> /&gt;</span><br><span class="line"> &lt;input <span class="built_in">type</span>=<span class="string">"button"</span> name=<span class="string">"set9"</span> value=<span class="string">"浏览... "</span>class=<span class="string">"coolbg np"</span> style=<span class="string">"width:60px"</span> onClick=<span class="string">"SelectImage('form1.typeimg','');"</span> /&gt;</span><br><span class="line">   &lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br></pre></td></tr></table></figure></p><blockquote><p>备注说明：下面这句会调用出已添加的路片路径。<br>&lt;?php echo $myrow[‘typeimg’]?&gt;<br>和第三步一样，在文件的<head></head>里面增加以下内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">'javascript'</span> src=<span class="string">"js/main.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="在前台栏目模板中调用自定义缩略图"><a href="#在前台栏目模板中调用自定义缩略图" class="headerlink" title="在前台栏目模板中调用自定义缩略图"></a>在前台栏目模板中调用自定义缩略图</h3><blockquote><p>在模版里用：{dede:field.typeimg /} 是调不出数据的，所以改成SQL调用。<br>原来是这样的：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;dede:channel <span class="built_in">type</span>=<span class="string">'top'</span> row=<span class="string">'13'</span>&#125;</span><br><span class="line">     &lt;li&gt;&lt;a href=<span class="string">'[field:typeurl/]'</span> [field:rel/]&gt;[field:typeimg/]&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&#123;/dede:channel&#125;</span><br></pre></td></tr></table></figure></p></blockquote><p>在这里面加上[field:typeimg]是调不出来的，栏目缩略图就是通过循环出来的，而循环不出来则意义不大，所以改成了如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;dede:sql sql=<span class="string">"SELECT typename,typedir,typeimg FROM dede_arctype"</span>&#125;</span><br><span class="line">    &lt;li&gt;&lt;a href=<span class="string">"[field:typedir/]"</span>&gt;[field:typeimg/]&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&#123;/dede:sql&#125;</span><br></pre></td></tr></table></figure></p><p>这样就顺利的调出来了,当然如果你要调用子ID的话，只要加上相应的条件ID调用就可以了。</p><blockquote><p>添加或修改图片时在DedeCMS后台-《栏目管理》-高级选项中操作管理</p><h3 id="以下内容个人尚未实例测试"><a href="#以下内容个人尚未实例测试" class="headerlink" title="以下内容个人尚未实例测试"></a>以下内容个人尚未实例测试</h3><p>如果想同时在文章内容页调用自定义添加的缩略图<br>打开\include\arc.archives.class.php<br>查找<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$this</span>-&gt;ChannelUnit-&gt;ChannelInfos[<span class="string">'issystem'</span>]!=-1)</span><br></pre></td></tr></table></figure></p></blockquote><p>将<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$query</span> = <span class="string">"Select arc.*,tp.reid,tp.typedir,ch.addtable</span></span><br><span class="line"><span class="string">                 from `ant_archives` arc</span></span><br><span class="line"><span class="string">                          left join ant_arctype tp on tp.id=arc.typeid</span></span><br><span class="line"><span class="string">                           left join ant_channeltype as ch on arc.channel = ch.id</span></span><br><span class="line"><span class="string">                           where arc.id='<span class="variable">$aid</span>' "</span>;</span><br><span class="line">                 <span class="variable">$this</span>-&gt;Fields = <span class="variable">$this</span>-&gt;dsql-&gt;GetOne(<span class="variable">$query</span>);</span><br></pre></td></tr></table></figure></p><p>替换为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$query</span> = <span class="string">"Select arc.*,tp.reid,tp.typedir,tp.typeimg,ch.addtable</span></span><br><span class="line"><span class="string">                 from `ant_archives` arc</span></span><br><span class="line"><span class="string">                          left join ant_arctype tp on tp.id=arc.typeid</span></span><br><span class="line"><span class="string">                           left join ant_channeltype as ch on arc.channel = ch.id</span></span><br><span class="line"><span class="string">                           where arc.id='<span class="variable">$aid</span>' "</span>;</span><br><span class="line">                 <span class="variable">$this</span>-&gt;Fields = <span class="variable">$this</span>-&gt;dsql-&gt;GetOne(<span class="variable">$query</span>);</span><br></pre></td></tr></table></figure></p><p>即可。<br>如果需要在内容页中使用栏目缩略图的朋友，可以去试一下。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;我们用织梦制作时，点击进入每个栏目时，都会有“关于我们”，“新闻中心”，“产品展示”等提示性的图片，单独调用这些图片比较麻烦，我们可以修改程序，实现每个栏目都有上传栏目缩略图的功能，就方便多了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;
      
    
    </summary>
    
      <category term="DedeCMS" scheme="https://wangen.github.io/categories/DedeCMS/"/>
    
    
      <category term="DedeCMS" scheme="https://wangen.github.io/tags/DedeCMS/"/>
    
      <category term="栏目" scheme="https://wangen.github.io/tags/%E6%A0%8F%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>DedeCMS网站批量更新所有目录模板文件</title>
    <link href="https://wangen.github.io/2017/12/16/dede-template-1/"/>
    <id>https://wangen.github.io/2017/12/16/dede-template-1/</id>
    <published>2017-12-15T16:23:03.000Z</published>
    <updated>2017-12-16T08:57:14.179Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>通过MySQL命令来批量修改DedeCMS使用的模板文件，建议使用PHPMyAdmin等数据库管理工具打开操作，建议先备份数据库到本地</p></blockquote><h2 id="修改栏目频道页"><a href="#修改栏目频道页" class="headerlink" title="修改栏目频道页"></a>修改栏目频道页</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update dede_arctype <span class="built_in">set</span> tempindex = replace(tempindex,<span class="string">"&#123;style&#125;/page.htm"</span>,<span class="string">"&#123;style&#125;/index_article.htm"</span>)</span><br></pre></td></tr></table></figure><h2 id="修改栏目列表页"><a href="#修改栏目列表页" class="headerlink" title="修改栏目列表页"></a>修改栏目列表页</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update dede_arctype <span class="built_in">set</span> templist = replace(templist,<span class="string">"&#123;style&#125;/page.htm"</span>,<span class="string">"&#123;style&#125;/list_article.htm"</span>)</span><br></pre></td></tr></table></figure><h2 id="修改栏目内容页"><a href="#修改栏目内容页" class="headerlink" title="修改栏目内容页"></a>修改栏目内容页</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update dede_arctype <span class="built_in">set</span> temparticle = replace(temparticle,<span class="string">"&#123;style&#125;/page.htm"</span>,<span class="string">"&#123;style&#125;/article_article.htm"</span>)</span><br></pre></td></tr></table></figure><h2 id="修改指定ID栏目的列表页"><a href="#修改指定ID栏目的列表页" class="headerlink" title="修改指定ID栏目的列表页"></a>修改指定ID栏目的列表页</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update dede_arctype <span class="built_in">set</span> templist = replace(templist,<span class="string">"&#123;style&#125;/page.htm"</span>,<span class="string">"&#123;style&#125;/list_article.htm"</span>) <span class="built_in">where</span> id <span class="keyword">in</span>(1,2,3,4,5,6)</span><br></pre></td></tr></table></figure><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>以上所有命令都通用，在前三种后面加上where id in(ID1,ID2,ID3,ID4,ID5,……)，里面写入你打算修改的频道/栏目/文章ID，可批量修改指定ID的模板文件。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;通过MySQL命令来批量修改DedeCMS使用的模板文件，建议使用PHPMyAdmin等数据库管理工具打开操作，建议先备份数据库到本地&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;修改栏目频道页&quot;&gt;&lt;a href=&quot;#修改栏目频道页&quot; cl
      
    
    </summary>
    
      <category term="DedeCMS" scheme="https://wangen.github.io/categories/DedeCMS/"/>
    
    
      <category term="DedeCMS" scheme="https://wangen.github.io/tags/DedeCMS/"/>
    
      <category term="Template" scheme="https://wangen.github.io/tags/Template/"/>
    
  </entry>
  
  <entry>
    <title>DedeCMS织梦首页调用指定一篇文章body内容的方法</title>
    <link href="https://wangen.github.io/2017/12/16/dede-article-2/"/>
    <id>https://wangen.github.io/2017/12/16/dede-article-2/</id>
    <published>2017-12-15T16:16:24.000Z</published>
    <updated>2017-12-16T08:56:57.505Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我们常会碰到一些问题，比如DedeCMS网站在首页调用某一篇文档的正文内容，今天实例讲述了dedecms首页调用指定一篇文章body内容的方法。</p></blockquote><p>分享给大家供大家参考。具体实现方法如下：</p><h2 id="直接调用（包含样式等代码）"><a href="#直接调用（包含样式等代码）" class="headerlink" title="直接调用（包含样式等代码）"></a>直接调用（包含样式等代码）</h2><p>代码如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;dede:arclist idlist=<span class="string">'要调用文章的id'</span> channelid=<span class="string">'1'</span> addfields=<span class="string">'body'</span>&#125;</span><br><span class="line">[field:body <span class="keyword">function</span>=<span class="string">'cn_substr(@me,330)'</span>/]</span><br><span class="line">&#123;/dede:arclist&#125;</span><br></pre></td></tr></table></figure></p><h2 id="过滤调用（只调用纯文本内容）"><a href="#过滤调用（只调用纯文本内容）" class="headerlink" title="过滤调用（只调用纯文本内容）"></a>过滤调用（只调用纯文本内容）</h2><p>如果是要过滤掉文本中的html，使用如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;dede:arclist idlist=<span class="string">'要调用文章的id'</span> channelid=<span class="string">'1'</span> addfields=<span class="string">'body'</span>&#125;</span><br><span class="line">[field:body <span class="keyword">function</span>=<span class="string">'cn_substr(html2text(@me),330)'</span>/]</span><br><span class="line">&#123;/dede:arclist&#125;</span><br></pre></td></tr></table></figure></p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>idlist 是要调用文章的id, channelid 是这个内容模型id,  addfields 是要调用附加表里面的字段.</p><blockquote><p>本文参考地址<a href="http://www.xiuzhanwang.com/dedecms_jq/765.html" target="_blank" rel="noopener">来源</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;我们常会碰到一些问题，比如DedeCMS网站在首页调用某一篇文档的正文内容，今天实例讲述了dedecms首页调用指定一篇文章body内容的方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;分享给大家供大家参考。具体实现方法如下：&lt;/p&gt;
&lt;h2 i
      
    
    </summary>
    
      <category term="DedeCMS" scheme="https://wangen.github.io/categories/DedeCMS/"/>
    
    
      <category term="DedeCMS" scheme="https://wangen.github.io/tags/DedeCMS/"/>
    
      <category term="织梦" scheme="https://wangen.github.io/tags/%E7%BB%87%E6%A2%A6/"/>
    
      <category term="body" scheme="https://wangen.github.io/tags/body/"/>
    
  </entry>
  
  <entry>
    <title>Dedecms判断文章是否有缩略图没有就不显示默认图片</title>
    <link href="https://wangen.github.io/2017/12/16/dede-article-1/"/>
    <id>https://wangen.github.io/2017/12/16/dede-article-1/</id>
    <published>2017-12-15T16:09:24.000Z</published>
    <updated>2017-12-16T08:55:09.264Z</updated>
    
    <content type="html"><![CDATA[<h2 id="调用参考代码："><a href="#调用参考代码：" class="headerlink" title="调用参考代码："></a>调用参考代码：</h2><p>以下代码可直接复制使用<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[field:array runphp=<span class="string">'yes'</span>]  </span><br><span class="line">@me=(strpos(@me[<span class="string">'litpic'</span>],<span class="string">'defaultpic'</span>)?<span class="string">''</span>:<span class="string">"&lt;a href='&#123;@me['arcurl']&#125;' alt='&#123;@me['title']&#125;'&gt;&lt;img src='&#123;@me['litpic']&#125;' alt='&#123;@me['title']&#125;'/&gt;&lt;/a&gt;"</span>);  </span><br><span class="line">[/field:array]</span><br></pre></td></tr></table></figure></p><p>以上代码意思是，如果没有缩略图就显示为空白，有则显示</p><h2 id="编译之后的代码如下："><a href="#编译之后的代码如下：" class="headerlink" title="编译之后的代码如下："></a>编译之后的代码如下：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">'&#123;@me['</span>arcurl<span class="string">']&#125;'</span> alt=<span class="string">'&#123;@me['</span>title<span class="string">']&#125;'</span>&gt; &lt;img src=<span class="string">'&#123;@me['</span>litpic<span class="string">']&#125;'</span> alt=<span class="string">'&#123;@me['</span>title<span class="string">']&#125;'</span>/&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>如果你想自定义没有缩略图的样式，则修改’defaultpic’)?’’问号后面的单引号里面的内容。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;调用参考代码：&quot;&gt;&lt;a href=&quot;#调用参考代码：&quot; class=&quot;headerlink&quot; title=&quot;调用参考代码：&quot;&gt;&lt;/a&gt;调用参考代码：&lt;/h2&gt;&lt;p&gt;以下代码可直接复制使用&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;tab
      
    
    </summary>
    
      <category term="DedeCMS" scheme="https://wangen.github.io/categories/DedeCMS/"/>
    
    
      <category term="DedeCMS" scheme="https://wangen.github.io/tags/DedeCMS/"/>
    
      <category term="缩略图" scheme="https://wangen.github.io/tags/%E7%BC%A9%E7%95%A5%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>DedeCMS网站搬家重装后，登陆后台404</title>
    <link href="https://wangen.github.io/2017/12/16/dede-admin-404-1/"/>
    <id>https://wangen.github.io/2017/12/16/dede-admin-404-1/</id>
    <published>2017-12-15T16:00:34.000Z</published>
    <updated>2017-12-16T16:14:02.162Z</updated>
    
    <content type="html"><![CDATA[<h2 id="主要现象"><a href="#主要现象" class="headerlink" title="主要现象"></a>主要现象</h2><p>DedeCMS网站搬家重装完成后，正常登陆后台提示404错误</p><h2 id="测试分析"><a href="#测试分析" class="headerlink" title="测试分析"></a>测试分析</h2><p>测试重新安装dede目录无效；<br>测试修改目录权限无效；<br>在本地搭建正常打开</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>在本地搭建后，对dede程序升级备份，重新打包上传；测试可以正常安装打开</p><h2 id="实测案例"><a href="#实测案例" class="headerlink" title="实测案例"></a>实测案例</h2><p>dede程序源码版本由20150522更新到20150618后，404问题解决</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>个人猜测可能是因为新的主机环境版本和以前不大一样，对PHP等支持的兼容性造成的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;主要现象&quot;&gt;&lt;a href=&quot;#主要现象&quot; class=&quot;headerlink&quot; title=&quot;主要现象&quot;&gt;&lt;/a&gt;主要现象&lt;/h2&gt;&lt;p&gt;DedeCMS网站搬家重装完成后，正常登陆后台提示404错误&lt;/p&gt;
&lt;h2 id=&quot;测试分析&quot;&gt;&lt;a href=&quot;#测试分
      
    
    </summary>
    
      <category term="DedeCMS" scheme="https://wangen.github.io/categories/DedeCMS/"/>
    
    
      <category term="DedeCMS" scheme="https://wangen.github.io/tags/DedeCMS/"/>
    
      <category term="织梦" scheme="https://wangen.github.io/tags/%E7%BB%87%E6%A2%A6/"/>
    
  </entry>
  
  <entry>
    <title>Github Pages + Hexo搭建博客</title>
    <link href="https://wangen.github.io/2017/12/13/Github-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://wangen.github.io/2017/12/13/Github-Pages-Hexo搭建博客/</id>
    <published>2017-12-13T15:40:07.000Z</published>
    <updated>2018-01-20T13:52:26.413Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Hexo是一个快速、简洁且高效的博客框架，特别适合于部署静态的博客网站，这里是开始第一步的地方。</p><h2 id="Mac搭建参考网址说明"><a href="#Mac搭建参考网址说明" class="headerlink" title="Mac搭建参考网址说明"></a>Mac搭建参考网址说明</h2><p><a href="http://www.jianshu.com/p/484e4ca7edf0" target="_blank" rel="noopener">在Mac上搭建基于Hexo的个人博客网站</a><br><a href="http://fanzhenyu.me/categories/Hexo/" target="_blank" rel="noopener">Github Pages + Hexo搭建博客</a><br><a href="http://lawlite.me/2017/04/13/Hexo-Github%E5%AE%9E%E7%8E%B0%E7%9B%B8%E5%86%8C%E5%8A%9F%E8%83%BD/" target="_blank" rel="noopener">Hexo+Github实现相册功能</a></p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=22843115&auto=1&height=66"></iframe><h2 id="MarkDown"><a href="#MarkDown" class="headerlink" title="MarkDown"></a>MarkDown</h2><h3 id="Cmd-MarkDown编辑器"><a href="#Cmd-MarkDown编辑器" class="headerlink" title="Cmd MarkDown编辑器"></a>Cmd MarkDown编辑器</h3><p><a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="noopener">在线MarkDown文本编辑</a></p><h2 id="Hexo-Theme"><a href="#Hexo-Theme" class="headerlink" title="Hexo Theme"></a>Hexo Theme</h2><h3 id="yilia-https-github-com-litten-hexo-theme-yilia-issues-63"><a href="#yilia-https-github-com-litten-hexo-theme-yilia-issues-63" class="headerlink" title="[yilia] (https://github.com/litten/hexo-theme-yilia/issues/63)"></a>[yilia] (<a href="https://github.com/litten/hexo-theme-yilia/issues/63" target="_blank" rel="noopener">https://github.com/litten/hexo-theme-yilia/issues/63</a>)</h3><p>作者：<a href="http://litten.me/" target="_blank" rel="noopener">Litten</a><br>第三方评论工具：<a href="https://livere.com/" target="_blank" rel="noopener">来必力</a></p><h2 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"postName"</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">"pageName"</span> <span class="comment">#新建页面</span></span><br><span class="line">hexo generate <span class="comment">#生成静态页面至public目录</span></span><br><span class="line">hexo server <span class="comment">#开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span></span><br><span class="line">hexo deploy <span class="comment">#将.deploy目录部署到GitHub</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Hexo是一个快速、简洁且高效的博客框架，特别适合于部署静态的博客网站，这里是开始第一步的地方。&lt;/p&gt;
&lt;h2 id=&quot;Mac搭建参考网址说明&quot;&gt;&lt;a href=&quot;#Mac搭建参考网址说明&quot; class=&quot;headerlink&quot; title=&quot;M
      
    
    </summary>
    
      <category term="Hexo" scheme="https://wangen.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://wangen.github.io/tags/Hexo/"/>
    
      <category term="Github" scheme="https://wangen.github.io/tags/Github/"/>
    
      <category term="博客搭建" scheme="https://wangen.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>第一篇博客，记录转载学习随笔</title>
    <link href="https://wangen.github.io/2017/12/13/hello-world/"/>
    <id>https://wangen.github.io/2017/12/13/hello-world/</id>
    <published>2017-12-13T14:40:07.000Z</published>
    <updated>2018-01-20T13:52:39.620Z</updated>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=432506345&auto=1&height=66"></iframe><blockquote><p>默认生成的Hexo第一篇博客，在我开始搭建的时候，Python开始进入中学课本……<br>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p></blockquote><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><h3 id="新建一个页面目录"><a href="#新建一个页面目录" class="headerlink" title="新建一个页面目录"></a>新建一个页面目录</h3><p>在命令行里面输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page <span class="string">"about"</span></span><br></pre></td></tr></table></figure></p><p>然后你会发现source里面多了个目录about，里面有个index.md。其实你也可以手动建立。页面的格式和文章一样。<br>接着把链接加上，themes/<theme_name>/_config.yml里面的menu一项，添加一行About: /about。<br>完事。来源：<a href="https://segmentfault.com/q/1010000000618915" target="_blank" rel="noopener">Hexo菜单中添加分类和页面</a> 还有<a href="https://www.zhihu.com/question/33324071" target="_blank" rel="noopener">知乎</a></theme_name></p><p>###<a href="http://www.jianshu.com/p/e6e54389c88f" target="_blank" rel="noopener">Hexo主题中实现多级分类</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://wangen.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
